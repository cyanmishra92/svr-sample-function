-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity addsub is
port (
    ap_ready : OUT STD_LOGIC;
    a_V : IN STD_LOGIC_VECTOR (42 downto 0);
    b_V : IN STD_LOGIC_VECTOR (42 downto 0);
    add : IN STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (43 downto 0) );
end;


architecture behav of addsub is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_fu_34_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_s_fu_38_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_10_fu_54_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_48_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_2_fu_42_p2 : STD_LOGIC_VECTOR (43 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= 
        r_V_fu_48_p2 when (r_V_10_fu_54_p0(0) = '1') else 
        r_V_2_fu_42_p2;
    r_V_10_fu_54_p0 <= (0=>add, others=>'-');
    r_V_2_fu_42_p2 <= std_logic_vector(signed(tmp_fu_34_p1) - signed(tmp_s_fu_38_p1));
    r_V_fu_48_p2 <= std_logic_vector(signed(tmp_s_fu_38_p1) + signed(tmp_fu_34_p1));
        tmp_fu_34_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_V),44));

        tmp_s_fu_38_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_V),44));

end behav;
