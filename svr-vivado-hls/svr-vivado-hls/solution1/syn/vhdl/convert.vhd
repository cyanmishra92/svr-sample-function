-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convert is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    width : IN STD_LOGIC_VECTOR (31 downto 0);
    height : IN STD_LOGIC_VECTOR (31 downto 0);
    hp : IN STD_LOGIC_VECTOR (31 downto 0);
    ht : IN STD_LOGIC_VECTOR (31 downto 0);
    fw : IN STD_LOGIC_VECTOR (31 downto 0);
    fh : IN STD_LOGIC_VECTOR (31 downto 0);
    fovX : IN STD_LOGIC_VECTOR (31 downto 0);
    fovY : IN STD_LOGIC_VECTOR (31 downto 0);
    option : IN STD_LOGIC_VECTOR (31 downto 0);
    fov_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    fov_ce0 : OUT STD_LOGIC;
    fov_we0 : OUT STD_LOGIC;
    fov_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    fov_address1 : OUT STD_LOGIC_VECTOR (20 downto 0);
    fov_ce1 : OUT STD_LOGIC;
    fov_we1 : OUT STD_LOGIC;
    fov_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of convert is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "convert,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=5243092,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=131,HLS_SYN_FF=58430,HLS_SYN_LUT=85671,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (41 downto 0) := "000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (41 downto 0) := "000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (41 downto 0) := "000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (41 downto 0) := "000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (41 downto 0) := "000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (41 downto 0) := "000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (41 downto 0) := "000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (41 downto 0) := "000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (41 downto 0) := "000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (41 downto 0) := "001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (41 downto 0) := "010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state218 : STD_LOGIC_VECTOR (41 downto 0) := "100000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_42340000 : STD_LOGIC_VECTOR (31 downto 0) := "01000010001101000000000000000000";
    constant ap_const_lv32_C1F00000 : STD_LOGIC_VECTOR (31 downto 0) := "11000001111100000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3FC90FF9 : STD_LOGIC_VECTOR (31 downto 0) := "00111111110010010000111111111001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_43340000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011001101000000000000000000";
    constant ap_const_lv32_40490FD0 : STD_LOGIC_VECTOR (31 downto 0) := "01000000010010010000111111010000";
    constant ap_const_lv32_C0490FD0 : STD_LOGIC_VECTOR (31 downto 0) := "11000000010010010000111111010000";
    constant ap_const_lv32_3FC90FDB : STD_LOGIC_VECTOR (31 downto 0) := "00111111110010010000111111011011";
    constant ap_const_lv32_3DB3FFAC : STD_LOGIC_VECTOR (31 downto 0) := "00111101101100111111111110101100";
    constant ap_const_lv32_43B40000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011101101000000000000000000";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_3D6FFC11 : STD_LOGIC_VECTOR (31 downto 0) := "00111101011011111111110000010001";
    constant ap_const_lv32_3F000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000000000000000000000";
    constant ap_const_lv32_40400000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000010000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_BFF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv21_100000 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv21_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv23_1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal w : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal h : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal indvar_flatten_reg_205 : STD_LOGIC_VECTOR (20 downto 0);
    signal i_reg_217 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_reg_241 : STD_LOGIC_VECTOR (10 downto 0);
    signal b_reg_252 : STD_LOGIC_VECTOR (10 downto 0);
    signal res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_418_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_501 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state40_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state45_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state50_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state55_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state60_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state65_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state70_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state75_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state80_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state85_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_state90_pp0_stage3_iter10 : BOOLEAN;
    signal ap_block_state95_pp0_stage3_iter11 : BOOLEAN;
    signal ap_block_state100_pp0_stage3_iter12 : BOOLEAN;
    signal ap_block_state105_pp0_stage3_iter13 : BOOLEAN;
    signal ap_block_state110_pp0_stage3_iter14 : BOOLEAN;
    signal ap_block_state115_pp0_stage3_iter15 : BOOLEAN;
    signal ap_block_state120_pp0_stage3_iter16 : BOOLEAN;
    signal ap_block_state125_pp0_stage3_iter17 : BOOLEAN;
    signal ap_block_state130_pp0_stage3_iter18 : BOOLEAN;
    signal ap_block_state135_pp0_stage3_iter19 : BOOLEAN;
    signal ap_block_state140_pp0_stage3_iter20 : BOOLEAN;
    signal ap_block_state145_pp0_stage3_iter21 : BOOLEAN;
    signal ap_block_state150_pp0_stage3_iter22 : BOOLEAN;
    signal ap_block_state155_pp0_stage3_iter23 : BOOLEAN;
    signal ap_block_state160_pp0_stage3_iter24 : BOOLEAN;
    signal ap_block_state165_pp0_stage3_iter25 : BOOLEAN;
    signal ap_block_state170_pp0_stage3_iter26 : BOOLEAN;
    signal ap_block_state175_pp0_stage3_iter27 : BOOLEAN;
    signal ap_block_state180_pp0_stage3_iter28 : BOOLEAN;
    signal ap_block_state185_pp0_stage3_iter29 : BOOLEAN;
    signal ap_block_state190_pp0_stage3_iter30 : BOOLEAN;
    signal ap_block_state195_pp0_stage3_iter31 : BOOLEAN;
    signal ap_block_state200_pp0_stage3_iter32 : BOOLEAN;
    signal ap_block_state205_pp0_stage3_iter33 : BOOLEAN;
    signal ap_block_state210_pp0_stage3_iter34 : BOOLEAN;
    signal ap_block_state215_pp0_stage3_iter35 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1764 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_424_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_506 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1764_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_460_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal reg_511_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state37_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state52_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state62_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state67_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state72_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state77_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state82_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state87_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state92_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state97_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state102_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state107_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state112_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state117_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state122_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state127_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state132_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state137_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state142_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state147_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state152_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state157_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state162_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state167_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state172_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state177_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state182_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state187_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state192_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state197_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state202_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state207_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state212_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state217_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_511_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter25_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter26_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter27_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter28_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter29_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter30_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter31_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter32_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter33_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_511_pp0_iter34_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_reg_1755 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_517 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_state41_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state46_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state51_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state56_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state61_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state66_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state71_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state76_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state81_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_state86_pp0_stage4_iter9 : BOOLEAN;
    signal ap_block_state91_pp0_stage4_iter10 : BOOLEAN;
    signal ap_block_state96_pp0_stage4_iter11 : BOOLEAN;
    signal ap_block_state101_pp0_stage4_iter12 : BOOLEAN;
    signal ap_block_state106_pp0_stage4_iter13 : BOOLEAN;
    signal ap_block_state111_pp0_stage4_iter14 : BOOLEAN;
    signal ap_block_state116_pp0_stage4_iter15 : BOOLEAN;
    signal ap_block_state121_pp0_stage4_iter16 : BOOLEAN;
    signal ap_block_state126_pp0_stage4_iter17 : BOOLEAN;
    signal ap_block_state131_pp0_stage4_iter18 : BOOLEAN;
    signal ap_block_state136_pp0_stage4_iter19 : BOOLEAN;
    signal ap_block_state141_pp0_stage4_iter20 : BOOLEAN;
    signal ap_block_state146_pp0_stage4_iter21 : BOOLEAN;
    signal ap_block_state151_pp0_stage4_iter22 : BOOLEAN;
    signal ap_block_state156_pp0_stage4_iter23 : BOOLEAN;
    signal ap_block_state161_pp0_stage4_iter24 : BOOLEAN;
    signal ap_block_state166_pp0_stage4_iter25 : BOOLEAN;
    signal ap_block_state171_pp0_stage4_iter26 : BOOLEAN;
    signal ap_block_state176_pp0_stage4_iter27 : BOOLEAN;
    signal ap_block_state181_pp0_stage4_iter28 : BOOLEAN;
    signal ap_block_state186_pp0_stage4_iter29 : BOOLEAN;
    signal ap_block_state191_pp0_stage4_iter30 : BOOLEAN;
    signal ap_block_state196_pp0_stage4_iter31 : BOOLEAN;
    signal ap_block_state201_pp0_stage4_iter32 : BOOLEAN;
    signal ap_block_state206_pp0_stage4_iter33 : BOOLEAN;
    signal ap_block_state211_pp0_stage4_iter34 : BOOLEAN;
    signal ap_block_state216_pp0_stage4_iter35 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1764_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_453_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_525 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1764_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_489_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_531 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1764_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_block_state38_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state48_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state53_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state58_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state63_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state68_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state73_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state78_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state83_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state88_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state93_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state98_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state103_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_state108_pp0_stage1_iter14 : BOOLEAN;
    signal ap_block_state113_pp0_stage1_iter15 : BOOLEAN;
    signal ap_block_state118_pp0_stage1_iter16 : BOOLEAN;
    signal ap_block_state123_pp0_stage1_iter17 : BOOLEAN;
    signal ap_block_state128_pp0_stage1_iter18 : BOOLEAN;
    signal ap_block_state133_pp0_stage1_iter19 : BOOLEAN;
    signal ap_block_state138_pp0_stage1_iter20 : BOOLEAN;
    signal ap_block_state143_pp0_stage1_iter21 : BOOLEAN;
    signal ap_block_state148_pp0_stage1_iter22 : BOOLEAN;
    signal ap_block_state153_pp0_stage1_iter23 : BOOLEAN;
    signal ap_block_state158_pp0_stage1_iter24 : BOOLEAN;
    signal ap_block_state163_pp0_stage1_iter25 : BOOLEAN;
    signal ap_block_state168_pp0_stage1_iter26 : BOOLEAN;
    signal ap_block_state173_pp0_stage1_iter27 : BOOLEAN;
    signal ap_block_state178_pp0_stage1_iter28 : BOOLEAN;
    signal ap_block_state183_pp0_stage1_iter29 : BOOLEAN;
    signal ap_block_state188_pp0_stage1_iter30 : BOOLEAN;
    signal ap_block_state193_pp0_stage1_iter31 : BOOLEAN;
    signal ap_block_state198_pp0_stage1_iter32 : BOOLEAN;
    signal ap_block_state203_pp0_stage1_iter33 : BOOLEAN;
    signal ap_block_state208_pp0_stage1_iter34 : BOOLEAN;
    signal ap_block_state213_pp0_stage1_iter35 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1764_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_382_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_536 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_344_reg_2351 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_541 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_541_pp0_iter30_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_541_pp0_iter31_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_541_pp0_iter32_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_436_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_546 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_block_state39_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state44_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state49_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state54_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state59_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state64_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state69_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state74_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state79_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state84_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_state89_pp0_stage2_iter10 : BOOLEAN;
    signal ap_block_state94_pp0_stage2_iter11 : BOOLEAN;
    signal ap_block_state99_pp0_stage2_iter12 : BOOLEAN;
    signal ap_block_state104_pp0_stage2_iter13 : BOOLEAN;
    signal ap_block_state109_pp0_stage2_iter14 : BOOLEAN;
    signal ap_block_state114_pp0_stage2_iter15 : BOOLEAN;
    signal ap_block_state119_pp0_stage2_iter16 : BOOLEAN;
    signal ap_block_state124_pp0_stage2_iter17 : BOOLEAN;
    signal ap_block_state129_pp0_stage2_iter18 : BOOLEAN;
    signal ap_block_state134_pp0_stage2_iter19 : BOOLEAN;
    signal ap_block_state139_pp0_stage2_iter20 : BOOLEAN;
    signal ap_block_state144_pp0_stage2_iter21 : BOOLEAN;
    signal ap_block_state149_pp0_stage2_iter22 : BOOLEAN;
    signal ap_block_state154_pp0_stage2_iter23 : BOOLEAN;
    signal ap_block_state159_pp0_stage2_iter24 : BOOLEAN;
    signal ap_block_state164_pp0_stage2_iter25 : BOOLEAN;
    signal ap_block_state169_pp0_stage2_iter26 : BOOLEAN;
    signal ap_block_state174_pp0_stage2_iter27 : BOOLEAN;
    signal ap_block_state179_pp0_stage2_iter28 : BOOLEAN;
    signal ap_block_state184_pp0_stage2_iter29 : BOOLEAN;
    signal ap_block_state189_pp0_stage2_iter30 : BOOLEAN;
    signal ap_block_state194_pp0_stage2_iter31 : BOOLEAN;
    signal ap_block_state199_pp0_stage2_iter32 : BOOLEAN;
    signal ap_block_state204_pp0_stage2_iter33 : BOOLEAN;
    signal ap_block_state209_pp0_stage2_iter34 : BOOLEAN;
    signal ap_block_state214_pp0_stage2_iter35 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1764_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_344_reg_2351_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1764_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_344_reg_2351_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_441_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1764_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_344_reg_2351_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_fu_467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_143_reg_1717 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal grp_sin_or_cos_float_s_fu_321_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal rot_y_0_0_reg_1723 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_336_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal rot_y_2_0_reg_1729 : STD_LOGIC_VECTOR (31 downto 0);
    signal rot_y_0_2_fu_584_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rot_y_0_2_reg_1734 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_351_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal rot_z_0_0_reg_1739 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_366_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal rot_z_0_1_reg_1745 : STD_LOGIC_VECTOR (31 downto 0);
    signal rot_z_1_0_fu_598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rot_z_1_0_reg_1750 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_284_reg_1759 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1764_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_289_reg_1768 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_assign_1_fu_660_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_assign_1_reg_1778 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_assign_1_reg_1778_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_next_fu_668_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal indvar_flatten_next_reg_1783 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_388_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_1788 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond6_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_reg_1796 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_reg_1796_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal b_mid2_fu_686_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801 : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter7_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter9_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter10_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter11_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter14_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal b_mid2_reg_1801_pp0_iter15_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_fu_694_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter7_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter9_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter10_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter11_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter14_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_152_mid2_v_reg_1807_pp0_iter15_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal i_mid2_fu_702_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_mid2_reg_1813 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_assign_fu_751_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_assign_reg_1818 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_400_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_1823 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_518_mid1_reg_1828 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_1_fu_759_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal b_1_reg_1833 : STD_LOGIC_VECTOR (10 downto 0);
    signal a_assign_1_mid1_fu_804_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_assign_1_mid1_reg_1838 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_assign_1_mid2_v_s_fu_811_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_i1_i_reg_1848 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal tmp_i_i_i1_i_reg_1848_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_i2_i_reg_1853 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_i2_i_reg_1853_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal sp_reg_1858 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal z_reg_1864 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_1871 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal y_reg_1878 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_i_reg_1884 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_i_reg_1884_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_i_reg_1889 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_i_reg_1889_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_i_reg_1894 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_i_reg_1894_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i6_reg_1899 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal tmp_i_45_reg_1904 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_i_reg_1910 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_i_reg_1915 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i_reg_1920 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal tmp_18_i_reg_1925 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_394_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_i_reg_1930 : STD_LOGIC_VECTOR (31 downto 0);
    signal p2_0_reg_1935 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal grp_fu_406_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p2_1_reg_1942 : STD_LOGIC_VECTOR (31 downto 0);
    signal p2_2_reg_1948 : STD_LOGIC_VECTOR (31 downto 0);
    signal p2_2_reg_1948_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p2_2_reg_1948_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i7_reg_1954 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i5_46_reg_1959 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_i1_reg_1964 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_i1_reg_1969 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_i_reg_1974 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_i_reg_1979 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal tmp_15_i1_reg_1984 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_i1_reg_1984_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i1_reg_1990 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal tmp_18_i2_reg_1995 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_i1_reg_2000 : STD_LOGIC_VECTOR (31 downto 0);
    signal p3_2_reg_2005 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal p3_2_reg_2005_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_3_reg_2017 : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_3_reg_2017_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_reg_2029 : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_reg_2029_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_353_fu_832_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_353_reg_2040 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_305_reg_2045 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_305_reg_2045_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_839_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter17_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter18_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter19_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter20_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter21_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter22_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter23_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter24_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter25_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter26_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter27_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter28_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter29_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter30_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter31_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter32_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter33_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter34_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_reg_2050_pp0_iter35_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_327_fu_849_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_327_reg_2055 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxAxis_reg_2060 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxAxis_reg_2060_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_297_reg_2070 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_301_reg_2075 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_reg_2080 : STD_LOGIC_VECTOR (0 downto 0);
    signal absX_reg_2085 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_349_fu_881_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_349_reg_2095 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_294_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_2100_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal absY_reg_2104 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal tmp_314_reg_2115 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_322_reg_2120 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_325_reg_2125 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_316_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_316_reg_2130 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_324_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_324_reg_2136 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_326_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_326_reg_2142 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_329_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_329_reg_2148 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_330_reg_2154 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_334_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_334_reg_2159 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_fu_1208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_reg_2165 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_reg_2172 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_337_fu_1304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_337_reg_2178 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_fu_1321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_reg_2184 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_i_fu_1345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_i_reg_2190 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_i_fu_1370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_i_reg_2196 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxAxis_5_fu_1376_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxAxis_5_reg_2204 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp16_i_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_i_reg_2209 : STD_LOGIC_VECTOR (0 downto 0);
    signal vc_5_fu_1396_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_5_reg_2215 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxAxis_7_fu_1473_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxAxis_7_reg_2220 : STD_LOGIC_VECTOR (31 downto 0);
    signal uc_1_fu_1517_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal uc_1_reg_2226 : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_8_fu_1536_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_8_reg_2231 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i1_fu_1598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i1_reg_2236 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i2_fu_1616_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i_i2_reg_2241 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i_i2_cast_fu_1624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal vertical_i_i_fu_1628_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_i_i_reg_2256 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal tmp_47_i_i_reg_2261 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_494_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_i_i_reg_2266 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal tmp_42_i_i_reg_2266_pp0_iter21_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_i_i_reg_2266_pp0_iter22_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_i_i_reg_2266_pp0_iter23_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_i_i_reg_2266_pp0_iter24_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_i_i_reg_2266_pp0_iter25_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_i_i_reg_2266_pp0_iter26_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i_i_reg_2271 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i_i_reg_2271_pp0_iter21_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i_i_reg_2271_pp0_iter22_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i_i_reg_2271_pp0_iter23_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i_i_reg_2271_pp0_iter24_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i_i_reg_2271_pp0_iter25_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_138_i_reg_2276 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal tmp_140_i_reg_2281 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_139_i_reg_2286 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal tmp_141_i_reg_2291 : STD_LOGIC_VECTOR (31 downto 0);
    signal u_reg_2296 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal v_reg_2301 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_i_i_reg_2306 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal y_assign_reg_2311 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_i_i_reg_2316 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal tmp_50_i_i_reg_2321 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_i_i_reg_2326 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal tmp_44_i_i_reg_2331 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_i_i_reg_2336 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal m_reg_2341 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_reg_2341_pp0_iter29_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atan2_cordic_float_s_fu_315_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_344_fu_1668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_344_reg_2351_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_344_reg_2351_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_generic_asin_float_s_fu_310_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_i_i_i_reg_2365 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_reg_2370 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_i_i_reg_2375 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state41 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal grp_sin_or_cos_float_s_fu_321_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_321_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_321_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_321_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_321_t_in : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_321_do_cos : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_336_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_336_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_336_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_336_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_336_do_cos : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_351_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_351_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_351_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_351_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_351_do_cos : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_366_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_366_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_366_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_366_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_366_do_cos : STD_LOGIC;
    signal ap_phi_mux_indvar_flatten_phi_fu_209_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_i_phi_fu_221_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_j_1_phi_fu_233_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_a_phi_fu_245_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_phi_mux_b_phi_fu_256_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_reg_pp0_iter0_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter18_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter19_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter20_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter21_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter22_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter23_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter24_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter25_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter26_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter27_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter28_the_assign_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter18_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter19_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter20_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter21_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter22_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter23_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter24_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter25_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter26_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter27_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter28_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter29_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter30_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter31_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter32_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter33_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter34_res_0_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter18_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter19_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter20_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter21_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter22_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter23_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter24_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter25_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter26_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter27_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter28_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter29_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter30_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter31_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter32_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter33_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter34_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter35_res_1_4_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter18_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter19_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter20_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter21_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter22_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter23_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter24_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter25_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter26_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter27_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter28_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter29_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter30_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter31_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter32_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter33_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter34_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter35_res_0_4_reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal grp_sin_or_cos_float_s_fu_321_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_NS_fsm_state21 : STD_LOGIC;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal grp_sin_or_cos_float_s_fu_336_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_or_cos_float_s_fu_351_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_or_cos_float_s_fu_366_ap_start_reg : STD_LOGIC := '0';
    signal tmp_61_fu_1686_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_62_cast_fu_1697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_382_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_382_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_388_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_394_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_400_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_400_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_406_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_418_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_418_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_424_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_424_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_431_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_436_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_436_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_441_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_441_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_448_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_448_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_453_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_453_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_460_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_464_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i1_i_fu_860_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i_i_fu_872_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_i_i_i_i_i5_i_fu_932_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_467_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_470_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_476_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_476_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_482_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_489_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_494_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_494_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_498_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_289_to_int_fu_574_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_289_neg_fu_578_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_295_to_int_fu_588_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_295_neg_fu_592_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_to_int_fu_619_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_282_fu_623_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_307_fu_633_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_283_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_285_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_1_fu_674_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_1_to_int_fu_710_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_287_fu_714_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_317_fu_724_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs1_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_288_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_290_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_to_int_mid1_fu_764_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_515_mid1_fu_767_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_312_fu_777_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_mid1_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_mid1_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_517_mid1_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_519_mid1_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_817_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_31_fu_828_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_159_cast_fu_836_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_56_cast_fu_824_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_s_fu_845_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_37_fu_853_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_865_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_30_fu_877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal result_0_write_assi_fu_885_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_291_fu_888_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_319_fu_898_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs2_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_292_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_36_fu_925_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal absX_i_to_int_fu_937_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal absY_i_to_int_fu_954_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_308_fu_940_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_357_fu_950_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs6_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs6_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_309_fu_957_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_358_fu_967_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs7_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs7_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_311_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_313_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_315_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxAxis_2_i_to_int_fu_1024_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_318_fu_1027_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_359_fu_1037_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs9_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs9_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_320_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_321_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_323_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_0_write_assi_1_fu_1093_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_295_fu_1096_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_354_fu_1106_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs3_fu_1116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_296_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_write_assi_fu_1133_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_299_fu_1136_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_355_fu_1146_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs4_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs4_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_300_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_2_write_assi_fu_1173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_303_fu_1176_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_356_fu_1186_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs5_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_298_fu_1128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_1229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_302_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_331_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not4_i_fu_1239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_332_fu_1254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_328_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vc_neg_i_fu_1272_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vc_1_neg_i_fu_1294_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond3_i_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_fu_1315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxAxis_2_fu_1309_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_not_fu_1334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_i_fu_1340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxAxis_3_fu_1327_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond6_i_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_i_fu_1288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_i_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_i_fu_1364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxAxis_4_fu_1351_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_1_fu_1278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_2_fu_1300_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_4_fu_1389_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_not9_i_fu_1404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_338_fu_1414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_1419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_335_fu_1409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_1431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_not_fu_1442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_i_fu_1446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp18_i_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_i_fu_1425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond11_i_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_1462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp24_i_fu_1468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxAxis_6_fu_1456_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp27_v_v_v_i_fu_1480_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp30_v_v_v_i_fu_1485_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp34_v_v_v_i_fu_1491_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp39_v_v_v_i_fu_1497_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp39_v_v_i_fu_1503_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp39_v_i_fu_1507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal uc_fu_1513_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_6_fu_1524_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal vc_7_fu_1529_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp79_i_fu_1543_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_339_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp86_i_cast_fu_1557_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp82_i_fu_1550_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_340_fu_1584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp97_i_cast_fu_1576_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp91_i_fu_1568_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal index_assign_fu_1590_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_57_fu_1604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_1610_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal the_assign_to_int_fu_1632_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_341_fu_1636_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_360_fu_1646_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs8_fu_1656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs8_fu_1650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_342_fu_1662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_361_fu_1679_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_62_fu_1691_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_388_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal grp_fu_406_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_470_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_476_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_482_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state218 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state218 : signal is "none";
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_1386 : BOOLEAN;
    signal ap_condition_930 : BOOLEAN;

    component generic_asin_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        in_r : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component atan2_cordic_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        y_in : IN STD_LOGIC_VECTOR (31 downto 0);
        x_in : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sin_or_cos_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (31 downto 0);
        do_cos : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component convert_fadd_32nspcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component convert_faddfsub_qcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component convert_fmul_32nsrcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component convert_fdiv_32nskbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component convert_sitofp_32sc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component convert_fptrunc_6tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component convert_fpext_32nocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convert_fcmp_32nsncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component convert_dadd_64nsudo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convert_dmul_64nsvdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convert_sitodp_32wdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_generic_asin_float_s_fu_310 : component generic_asin_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_r => p3_2_reg_2005,
        ap_return => grp_generic_asin_float_s_fu_310_ap_return);

    grp_atan2_cordic_float_s_fu_315 : component atan2_cordic_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        y_in => vc_reg_2029,
        x_in => vc_3_reg_2017,
        ap_return => grp_atan2_cordic_float_s_fu_315_ap_return);

    grp_sin_or_cos_float_s_fu_321 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_321_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_321_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_321_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_321_ap_ready,
        ap_ce => ap_const_logic_1,
        t_in => grp_sin_or_cos_float_s_fu_321_t_in,
        do_cos => grp_sin_or_cos_float_s_fu_321_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_321_ap_return);

    grp_sin_or_cos_float_s_fu_336 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_336_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_336_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_336_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_336_ap_ready,
        ap_ce => ap_const_logic_1,
        t_in => reg_525,
        do_cos => grp_sin_or_cos_float_s_fu_336_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_336_ap_return);

    grp_sin_or_cos_float_s_fu_351 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_351_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_351_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_351_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_351_ap_ready,
        ap_ce => ap_const_logic_1,
        t_in => reg_517,
        do_cos => grp_sin_or_cos_float_s_fu_351_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_351_ap_return);

    grp_sin_or_cos_float_s_fu_366 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_366_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_366_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_366_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_366_ap_ready,
        ap_ce => ap_const_logic_1,
        t_in => reg_517,
        do_cos => grp_sin_or_cos_float_s_fu_366_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_366_ap_return);

    convert_fadd_32nspcA_U46 : component convert_fadd_32nspcA
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_382_p0,
        din1 => grp_fu_382_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_382_p2);

    convert_faddfsub_qcK_U47 : component convert_faddfsub_qcK
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_388_p0,
        din1 => grp_fu_388_p1,
        opcode => grp_fu_388_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_388_p2);

    convert_fadd_32nspcA_U48 : component convert_fadd_32nspcA
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_394_p0,
        din1 => grp_fu_394_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_394_p2);

    convert_fadd_32nspcA_U49 : component convert_fadd_32nspcA
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_400_p0,
        din1 => grp_fu_400_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_400_p2);

    convert_faddfsub_qcK_U50 : component convert_faddfsub_qcK
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_406_p0,
        din1 => grp_fu_406_p1,
        opcode => grp_fu_406_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_406_p2);

    convert_fmul_32nsrcU_U51 : component convert_fmul_32nsrcU
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_418_p0,
        din1 => grp_fu_418_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_418_p2);

    convert_fmul_32nsrcU_U52 : component convert_fmul_32nsrcU
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_424_p0,
        din1 => grp_fu_424_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_424_p2);

    convert_fmul_32nsrcU_U53 : component convert_fmul_32nsrcU
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_431_p0,
        din1 => grp_fu_431_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_431_p2);

    convert_fmul_32nsrcU_U54 : component convert_fmul_32nsrcU
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_436_p0,
        din1 => grp_fu_436_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_436_p2);

    convert_fmul_32nsrcU_U55 : component convert_fmul_32nsrcU
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_441_p0,
        din1 => grp_fu_441_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_441_p2);

    convert_fdiv_32nskbM_U56 : component convert_fdiv_32nskbM
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_448_p0,
        din1 => grp_fu_448_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_448_p2);

    convert_fdiv_32nskbM_U57 : component convert_fdiv_32nskbM
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_453_p0,
        din1 => grp_fu_453_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_453_p2);

    convert_sitofp_32sc4_U58 : component convert_sitofp_32sc4
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_460_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_460_p1);

    convert_fptrunc_6tde_U59 : component convert_fptrunc_6tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_464_p0,
        dout => grp_fu_464_p1);

    convert_fpext_32nocq_U60 : component convert_fpext_32nocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_fu_467_p0,
        dout => grp_fu_467_p1);

    convert_fcmp_32nsncg_U61 : component convert_fcmp_32nsncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_470_p0,
        din1 => grp_fu_470_p1,
        opcode => grp_fu_470_opcode,
        dout => grp_fu_470_p2);

    convert_fcmp_32nsncg_U62 : component convert_fcmp_32nsncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_476_p0,
        din1 => grp_fu_476_p1,
        opcode => grp_fu_476_opcode,
        dout => grp_fu_476_p2);

    convert_fcmp_32nsncg_U63 : component convert_fcmp_32nsncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_482_p0,
        din1 => grp_fu_482_p1,
        opcode => grp_fu_482_opcode,
        dout => grp_fu_482_p2);

    convert_dadd_64nsudo_U64 : component convert_dadd_64nsudo
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_489_p0,
        din1 => grp_fu_489_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_489_p2);

    convert_dmul_64nsvdy_U65 : component convert_dmul_64nsvdy
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_494_p0,
        din1 => grp_fu_494_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_494_p2);

    convert_sitodp_32wdI_U66 : component convert_sitodp_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_498_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_498_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state41) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state41)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state41);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_321_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_321_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_logic_1 = ap_NS_fsm_state21)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1764_pp0_iter4_reg = ap_const_lv1_0)))) then 
                    grp_sin_or_cos_float_s_fu_321_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_321_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_321_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_336_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_336_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_logic_1 = ap_NS_fsm_state21))) then 
                    grp_sin_or_cos_float_s_fu_336_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_336_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_336_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_351_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_351_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_logic_1 = ap_NS_fsm_state21))) then 
                    grp_sin_or_cos_float_s_fu_351_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_351_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_351_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_366_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_366_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_logic_1 = ap_NS_fsm_state21))) then 
                    grp_sin_or_cos_float_s_fu_366_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_366_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_366_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a_reg_241_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter1_reg = ap_const_lv1_0))) then 
                a_reg_241 <= tmp_152_mid2_v_reg_1807;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                a_reg_241 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter17_the_assign_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_930)) then
                if ((ap_const_boolean_1 = ap_condition_1386)) then 
                    ap_phi_reg_pp0_iter17_the_assign_reg_263 <= ap_const_lv32_3FC90FF9;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter17_the_assign_reg_263 <= ap_phi_reg_pp0_iter16_the_assign_reg_263;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter28_the_assign_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_294_reg_2100_pp0_iter27_reg = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter28_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
                ap_phi_reg_pp0_iter28_the_assign_reg_263 <= grp_atan2_cordic_float_s_fu_315_ap_return;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter28_the_assign_reg_263 <= ap_phi_reg_pp0_iter27_the_assign_reg_263;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter29_res_0_4_reg_297_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter29_res_0_4_reg_297 <= grp_fu_464_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_phi_reg_pp0_iter29_res_0_4_reg_297 <= ap_phi_reg_pp0_iter28_res_0_4_reg_297;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter29_res_1_4_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter29_res_1_4_reg_285 <= m_reg_2341_pp0_iter29_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_phi_reg_pp0_iter29_res_1_4_reg_285 <= ap_phi_reg_pp0_iter28_res_1_4_reg_285;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter34_res_0_1_reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_344_reg_2351_pp0_iter33_reg = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter34_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_344_reg_2351_pp0_iter33_reg = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter34_reg = ap_const_lv1_0)))) then 
                ap_phi_reg_pp0_iter34_res_0_1_reg_275 <= grp_fu_441_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_phi_reg_pp0_iter34_res_0_1_reg_275 <= ap_phi_reg_pp0_iter33_res_0_1_reg_275;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter35_res_0_4_reg_297_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter35_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
                ap_phi_reg_pp0_iter35_res_0_4_reg_297 <= res_0_1_reg_275;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_phi_reg_pp0_iter35_res_0_4_reg_297 <= ap_phi_reg_pp0_iter34_res_0_4_reg_297;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter35_res_1_4_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter35_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
                ap_phi_reg_pp0_iter35_res_1_4_reg_285 <= grp_fu_431_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_phi_reg_pp0_iter35_res_1_4_reg_285 <= ap_phi_reg_pp0_iter34_res_1_4_reg_285;
            end if; 
        end if;
    end process;

    b_reg_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter1_reg = ap_const_lv1_0))) then 
                b_reg_252 <= b_1_reg_1833;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                b_reg_252 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    i_reg_217_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_0))) then 
                i_reg_217 <= i_mid2_reg_1813;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                i_reg_217 <= ap_const_lv32_42340000;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_205_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_0))) then 
                indvar_flatten_reg_205 <= indvar_flatten_next_reg_1783;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                indvar_flatten_reg_205 <= ap_const_lv21_0;
            end if; 
        end if;
    end process;

    j_1_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_0))) then 
                j_1_reg_229 <= j_reg_1823;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                j_1_reg_229 <= ap_const_lv32_C1F00000;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (exitcond6_reg_1796 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter1_reg = ap_const_lv1_0))) then
                a_assign_1_mid1_reg_1838 <= a_assign_1_mid1_fu_804_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                a_assign_1_reg_1778 <= a_assign_1_fu_660_p3;
                a_assign_1_reg_1778_pp0_iter1_reg <= a_assign_1_reg_1778;
                b_mid2_reg_1801_pp0_iter10_reg <= b_mid2_reg_1801_pp0_iter9_reg;
                b_mid2_reg_1801_pp0_iter11_reg <= b_mid2_reg_1801_pp0_iter10_reg;
                b_mid2_reg_1801_pp0_iter12_reg <= b_mid2_reg_1801_pp0_iter11_reg;
                b_mid2_reg_1801_pp0_iter13_reg <= b_mid2_reg_1801_pp0_iter12_reg;
                b_mid2_reg_1801_pp0_iter14_reg <= b_mid2_reg_1801_pp0_iter13_reg;
                b_mid2_reg_1801_pp0_iter15_reg <= b_mid2_reg_1801_pp0_iter14_reg;
                b_mid2_reg_1801_pp0_iter1_reg <= b_mid2_reg_1801;
                b_mid2_reg_1801_pp0_iter2_reg <= b_mid2_reg_1801_pp0_iter1_reg;
                b_mid2_reg_1801_pp0_iter3_reg <= b_mid2_reg_1801_pp0_iter2_reg;
                b_mid2_reg_1801_pp0_iter4_reg <= b_mid2_reg_1801_pp0_iter3_reg;
                b_mid2_reg_1801_pp0_iter5_reg <= b_mid2_reg_1801_pp0_iter4_reg;
                b_mid2_reg_1801_pp0_iter6_reg <= b_mid2_reg_1801_pp0_iter5_reg;
                b_mid2_reg_1801_pp0_iter7_reg <= b_mid2_reg_1801_pp0_iter6_reg;
                b_mid2_reg_1801_pp0_iter8_reg <= b_mid2_reg_1801_pp0_iter7_reg;
                b_mid2_reg_1801_pp0_iter9_reg <= b_mid2_reg_1801_pp0_iter8_reg;
                exitcond6_reg_1796_pp0_iter1_reg <= exitcond6_reg_1796;
                reg_541_pp0_iter30_reg <= reg_541;
                reg_541_pp0_iter31_reg <= reg_541_pp0_iter30_reg;
                reg_541_pp0_iter32_reg <= reg_541_pp0_iter31_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter10_reg <= tmp_152_mid2_v_reg_1807_pp0_iter9_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter11_reg <= tmp_152_mid2_v_reg_1807_pp0_iter10_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter12_reg <= tmp_152_mid2_v_reg_1807_pp0_iter11_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter13_reg <= tmp_152_mid2_v_reg_1807_pp0_iter12_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter14_reg <= tmp_152_mid2_v_reg_1807_pp0_iter13_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter15_reg <= tmp_152_mid2_v_reg_1807_pp0_iter14_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter1_reg <= tmp_152_mid2_v_reg_1807;
                tmp_152_mid2_v_reg_1807_pp0_iter2_reg <= tmp_152_mid2_v_reg_1807_pp0_iter1_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter3_reg <= tmp_152_mid2_v_reg_1807_pp0_iter2_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter4_reg <= tmp_152_mid2_v_reg_1807_pp0_iter3_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter5_reg <= tmp_152_mid2_v_reg_1807_pp0_iter4_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter6_reg <= tmp_152_mid2_v_reg_1807_pp0_iter5_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter7_reg <= tmp_152_mid2_v_reg_1807_pp0_iter6_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter8_reg <= tmp_152_mid2_v_reg_1807_pp0_iter7_reg;
                tmp_152_mid2_v_reg_1807_pp0_iter9_reg <= tmp_152_mid2_v_reg_1807_pp0_iter8_reg;
                tmp_294_reg_2100_pp0_iter17_reg <= tmp_294_reg_2100;
                tmp_294_reg_2100_pp0_iter18_reg <= tmp_294_reg_2100_pp0_iter17_reg;
                tmp_294_reg_2100_pp0_iter19_reg <= tmp_294_reg_2100_pp0_iter18_reg;
                tmp_294_reg_2100_pp0_iter20_reg <= tmp_294_reg_2100_pp0_iter19_reg;
                tmp_294_reg_2100_pp0_iter21_reg <= tmp_294_reg_2100_pp0_iter20_reg;
                tmp_294_reg_2100_pp0_iter22_reg <= tmp_294_reg_2100_pp0_iter21_reg;
                tmp_294_reg_2100_pp0_iter23_reg <= tmp_294_reg_2100_pp0_iter22_reg;
                tmp_294_reg_2100_pp0_iter24_reg <= tmp_294_reg_2100_pp0_iter23_reg;
                tmp_294_reg_2100_pp0_iter25_reg <= tmp_294_reg_2100_pp0_iter24_reg;
                tmp_294_reg_2100_pp0_iter26_reg <= tmp_294_reg_2100_pp0_iter25_reg;
                tmp_294_reg_2100_pp0_iter27_reg <= tmp_294_reg_2100_pp0_iter26_reg;
                tmp_344_reg_2351_pp0_iter29_reg <= tmp_344_reg_2351;
                tmp_344_reg_2351_pp0_iter30_reg <= tmp_344_reg_2351_pp0_iter29_reg;
                tmp_344_reg_2351_pp0_iter31_reg <= tmp_344_reg_2351_pp0_iter30_reg;
                tmp_344_reg_2351_pp0_iter32_reg <= tmp_344_reg_2351_pp0_iter31_reg;
                tmp_344_reg_2351_pp0_iter33_reg <= tmp_344_reg_2351_pp0_iter32_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764 = ap_const_lv1_0))) then
                a_assign_reg_1818 <= a_assign_fu_751_p3;
                b_mid2_reg_1801 <= b_mid2_fu_686_p3;
                exitcond6_reg_1796 <= exitcond6_fu_680_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                absX_reg_2085 <= grp_fu_464_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                absY_reg_2104 <= grp_fu_464_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter10_res_0_1_reg_275 <= ap_phi_reg_pp0_iter9_res_0_1_reg_275;
                ap_phi_reg_pp0_iter10_res_0_4_reg_297 <= ap_phi_reg_pp0_iter9_res_0_4_reg_297;
                ap_phi_reg_pp0_iter10_res_1_4_reg_285 <= ap_phi_reg_pp0_iter9_res_1_4_reg_285;
                ap_phi_reg_pp0_iter10_the_assign_reg_263 <= ap_phi_reg_pp0_iter9_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter11_res_0_1_reg_275 <= ap_phi_reg_pp0_iter10_res_0_1_reg_275;
                ap_phi_reg_pp0_iter11_res_0_4_reg_297 <= ap_phi_reg_pp0_iter10_res_0_4_reg_297;
                ap_phi_reg_pp0_iter11_res_1_4_reg_285 <= ap_phi_reg_pp0_iter10_res_1_4_reg_285;
                ap_phi_reg_pp0_iter11_the_assign_reg_263 <= ap_phi_reg_pp0_iter10_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter12_res_0_1_reg_275 <= ap_phi_reg_pp0_iter11_res_0_1_reg_275;
                ap_phi_reg_pp0_iter12_res_0_4_reg_297 <= ap_phi_reg_pp0_iter11_res_0_4_reg_297;
                ap_phi_reg_pp0_iter12_res_1_4_reg_285 <= ap_phi_reg_pp0_iter11_res_1_4_reg_285;
                ap_phi_reg_pp0_iter12_the_assign_reg_263 <= ap_phi_reg_pp0_iter11_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter13_res_0_1_reg_275 <= ap_phi_reg_pp0_iter12_res_0_1_reg_275;
                ap_phi_reg_pp0_iter13_res_0_4_reg_297 <= ap_phi_reg_pp0_iter12_res_0_4_reg_297;
                ap_phi_reg_pp0_iter13_res_1_4_reg_285 <= ap_phi_reg_pp0_iter12_res_1_4_reg_285;
                ap_phi_reg_pp0_iter13_the_assign_reg_263 <= ap_phi_reg_pp0_iter12_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter14_res_0_1_reg_275 <= ap_phi_reg_pp0_iter13_res_0_1_reg_275;
                ap_phi_reg_pp0_iter14_res_0_4_reg_297 <= ap_phi_reg_pp0_iter13_res_0_4_reg_297;
                ap_phi_reg_pp0_iter14_res_1_4_reg_285 <= ap_phi_reg_pp0_iter13_res_1_4_reg_285;
                ap_phi_reg_pp0_iter14_the_assign_reg_263 <= ap_phi_reg_pp0_iter13_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter15_res_0_1_reg_275 <= ap_phi_reg_pp0_iter14_res_0_1_reg_275;
                ap_phi_reg_pp0_iter15_res_0_4_reg_297 <= ap_phi_reg_pp0_iter14_res_0_4_reg_297;
                ap_phi_reg_pp0_iter15_res_1_4_reg_285 <= ap_phi_reg_pp0_iter14_res_1_4_reg_285;
                ap_phi_reg_pp0_iter15_the_assign_reg_263 <= ap_phi_reg_pp0_iter14_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter16_res_0_1_reg_275 <= ap_phi_reg_pp0_iter15_res_0_1_reg_275;
                ap_phi_reg_pp0_iter16_res_0_4_reg_297 <= ap_phi_reg_pp0_iter15_res_0_4_reg_297;
                ap_phi_reg_pp0_iter16_res_1_4_reg_285 <= ap_phi_reg_pp0_iter15_res_1_4_reg_285;
                ap_phi_reg_pp0_iter16_the_assign_reg_263 <= ap_phi_reg_pp0_iter15_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter17_res_0_1_reg_275 <= ap_phi_reg_pp0_iter16_res_0_1_reg_275;
                ap_phi_reg_pp0_iter17_res_0_4_reg_297 <= ap_phi_reg_pp0_iter16_res_0_4_reg_297;
                ap_phi_reg_pp0_iter17_res_1_4_reg_285 <= ap_phi_reg_pp0_iter16_res_1_4_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter18_res_0_1_reg_275 <= ap_phi_reg_pp0_iter17_res_0_1_reg_275;
                ap_phi_reg_pp0_iter18_res_0_4_reg_297 <= ap_phi_reg_pp0_iter17_res_0_4_reg_297;
                ap_phi_reg_pp0_iter18_res_1_4_reg_285 <= ap_phi_reg_pp0_iter17_res_1_4_reg_285;
                ap_phi_reg_pp0_iter18_the_assign_reg_263 <= ap_phi_reg_pp0_iter17_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter19_res_0_1_reg_275 <= ap_phi_reg_pp0_iter18_res_0_1_reg_275;
                ap_phi_reg_pp0_iter19_res_0_4_reg_297 <= ap_phi_reg_pp0_iter18_res_0_4_reg_297;
                ap_phi_reg_pp0_iter19_res_1_4_reg_285 <= ap_phi_reg_pp0_iter18_res_1_4_reg_285;
                ap_phi_reg_pp0_iter19_the_assign_reg_263 <= ap_phi_reg_pp0_iter18_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter1_res_0_1_reg_275 <= ap_phi_reg_pp0_iter0_res_0_1_reg_275;
                ap_phi_reg_pp0_iter1_res_0_4_reg_297 <= ap_phi_reg_pp0_iter0_res_0_4_reg_297;
                ap_phi_reg_pp0_iter1_res_1_4_reg_285 <= ap_phi_reg_pp0_iter0_res_1_4_reg_285;
                ap_phi_reg_pp0_iter1_the_assign_reg_263 <= ap_phi_reg_pp0_iter0_the_assign_reg_263;
                indvar_flatten_next_reg_1783 <= indvar_flatten_next_fu_668_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter20_res_0_1_reg_275 <= ap_phi_reg_pp0_iter19_res_0_1_reg_275;
                ap_phi_reg_pp0_iter20_res_0_4_reg_297 <= ap_phi_reg_pp0_iter19_res_0_4_reg_297;
                ap_phi_reg_pp0_iter20_res_1_4_reg_285 <= ap_phi_reg_pp0_iter19_res_1_4_reg_285;
                ap_phi_reg_pp0_iter20_the_assign_reg_263 <= ap_phi_reg_pp0_iter19_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter21_res_0_1_reg_275 <= ap_phi_reg_pp0_iter20_res_0_1_reg_275;
                ap_phi_reg_pp0_iter21_res_0_4_reg_297 <= ap_phi_reg_pp0_iter20_res_0_4_reg_297;
                ap_phi_reg_pp0_iter21_res_1_4_reg_285 <= ap_phi_reg_pp0_iter20_res_1_4_reg_285;
                ap_phi_reg_pp0_iter21_the_assign_reg_263 <= ap_phi_reg_pp0_iter20_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter22_res_0_1_reg_275 <= ap_phi_reg_pp0_iter21_res_0_1_reg_275;
                ap_phi_reg_pp0_iter22_res_0_4_reg_297 <= ap_phi_reg_pp0_iter21_res_0_4_reg_297;
                ap_phi_reg_pp0_iter22_res_1_4_reg_285 <= ap_phi_reg_pp0_iter21_res_1_4_reg_285;
                ap_phi_reg_pp0_iter22_the_assign_reg_263 <= ap_phi_reg_pp0_iter21_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter22 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter23_res_0_1_reg_275 <= ap_phi_reg_pp0_iter22_res_0_1_reg_275;
                ap_phi_reg_pp0_iter23_res_0_4_reg_297 <= ap_phi_reg_pp0_iter22_res_0_4_reg_297;
                ap_phi_reg_pp0_iter23_res_1_4_reg_285 <= ap_phi_reg_pp0_iter22_res_1_4_reg_285;
                ap_phi_reg_pp0_iter23_the_assign_reg_263 <= ap_phi_reg_pp0_iter22_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter23 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter24_res_0_1_reg_275 <= ap_phi_reg_pp0_iter23_res_0_1_reg_275;
                ap_phi_reg_pp0_iter24_res_0_4_reg_297 <= ap_phi_reg_pp0_iter23_res_0_4_reg_297;
                ap_phi_reg_pp0_iter24_res_1_4_reg_285 <= ap_phi_reg_pp0_iter23_res_1_4_reg_285;
                ap_phi_reg_pp0_iter24_the_assign_reg_263 <= ap_phi_reg_pp0_iter23_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter25_res_0_1_reg_275 <= ap_phi_reg_pp0_iter24_res_0_1_reg_275;
                ap_phi_reg_pp0_iter25_res_0_4_reg_297 <= ap_phi_reg_pp0_iter24_res_0_4_reg_297;
                ap_phi_reg_pp0_iter25_res_1_4_reg_285 <= ap_phi_reg_pp0_iter24_res_1_4_reg_285;
                ap_phi_reg_pp0_iter25_the_assign_reg_263 <= ap_phi_reg_pp0_iter24_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter26_res_0_1_reg_275 <= ap_phi_reg_pp0_iter25_res_0_1_reg_275;
                ap_phi_reg_pp0_iter26_res_0_4_reg_297 <= ap_phi_reg_pp0_iter25_res_0_4_reg_297;
                ap_phi_reg_pp0_iter26_res_1_4_reg_285 <= ap_phi_reg_pp0_iter25_res_1_4_reg_285;
                ap_phi_reg_pp0_iter26_the_assign_reg_263 <= ap_phi_reg_pp0_iter25_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter27_res_0_1_reg_275 <= ap_phi_reg_pp0_iter26_res_0_1_reg_275;
                ap_phi_reg_pp0_iter27_res_0_4_reg_297 <= ap_phi_reg_pp0_iter26_res_0_4_reg_297;
                ap_phi_reg_pp0_iter27_res_1_4_reg_285 <= ap_phi_reg_pp0_iter26_res_1_4_reg_285;
                ap_phi_reg_pp0_iter27_the_assign_reg_263 <= ap_phi_reg_pp0_iter26_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter28_res_0_1_reg_275 <= ap_phi_reg_pp0_iter27_res_0_1_reg_275;
                ap_phi_reg_pp0_iter28_res_0_4_reg_297 <= ap_phi_reg_pp0_iter27_res_0_4_reg_297;
                ap_phi_reg_pp0_iter28_res_1_4_reg_285 <= ap_phi_reg_pp0_iter27_res_1_4_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter29_res_0_1_reg_275 <= ap_phi_reg_pp0_iter28_res_0_1_reg_275;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter2_res_0_1_reg_275 <= ap_phi_reg_pp0_iter1_res_0_1_reg_275;
                ap_phi_reg_pp0_iter2_res_0_4_reg_297 <= ap_phi_reg_pp0_iter1_res_0_4_reg_297;
                ap_phi_reg_pp0_iter2_res_1_4_reg_285 <= ap_phi_reg_pp0_iter1_res_1_4_reg_285;
                ap_phi_reg_pp0_iter2_the_assign_reg_263 <= ap_phi_reg_pp0_iter1_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter30_res_0_1_reg_275 <= ap_phi_reg_pp0_iter29_res_0_1_reg_275;
                ap_phi_reg_pp0_iter30_res_0_4_reg_297 <= ap_phi_reg_pp0_iter29_res_0_4_reg_297;
                ap_phi_reg_pp0_iter30_res_1_4_reg_285 <= ap_phi_reg_pp0_iter29_res_1_4_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter31_res_0_1_reg_275 <= ap_phi_reg_pp0_iter30_res_0_1_reg_275;
                ap_phi_reg_pp0_iter31_res_0_4_reg_297 <= ap_phi_reg_pp0_iter30_res_0_4_reg_297;
                ap_phi_reg_pp0_iter31_res_1_4_reg_285 <= ap_phi_reg_pp0_iter30_res_1_4_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter32_res_0_1_reg_275 <= ap_phi_reg_pp0_iter31_res_0_1_reg_275;
                ap_phi_reg_pp0_iter32_res_0_4_reg_297 <= ap_phi_reg_pp0_iter31_res_0_4_reg_297;
                ap_phi_reg_pp0_iter32_res_1_4_reg_285 <= ap_phi_reg_pp0_iter31_res_1_4_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter33_res_0_1_reg_275 <= ap_phi_reg_pp0_iter32_res_0_1_reg_275;
                ap_phi_reg_pp0_iter33_res_0_4_reg_297 <= ap_phi_reg_pp0_iter32_res_0_4_reg_297;
                ap_phi_reg_pp0_iter33_res_1_4_reg_285 <= ap_phi_reg_pp0_iter32_res_1_4_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter34_res_0_4_reg_297 <= ap_phi_reg_pp0_iter33_res_0_4_reg_297;
                ap_phi_reg_pp0_iter34_res_1_4_reg_285 <= ap_phi_reg_pp0_iter33_res_1_4_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_res_0_1_reg_275 <= ap_phi_reg_pp0_iter2_res_0_1_reg_275;
                ap_phi_reg_pp0_iter3_res_0_4_reg_297 <= ap_phi_reg_pp0_iter2_res_0_4_reg_297;
                ap_phi_reg_pp0_iter3_res_1_4_reg_285 <= ap_phi_reg_pp0_iter2_res_1_4_reg_285;
                ap_phi_reg_pp0_iter3_the_assign_reg_263 <= ap_phi_reg_pp0_iter2_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_res_0_1_reg_275 <= ap_phi_reg_pp0_iter3_res_0_1_reg_275;
                ap_phi_reg_pp0_iter4_res_0_4_reg_297 <= ap_phi_reg_pp0_iter3_res_0_4_reg_297;
                ap_phi_reg_pp0_iter4_res_1_4_reg_285 <= ap_phi_reg_pp0_iter3_res_1_4_reg_285;
                ap_phi_reg_pp0_iter4_the_assign_reg_263 <= ap_phi_reg_pp0_iter3_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter5_res_0_1_reg_275 <= ap_phi_reg_pp0_iter4_res_0_1_reg_275;
                ap_phi_reg_pp0_iter5_res_0_4_reg_297 <= ap_phi_reg_pp0_iter4_res_0_4_reg_297;
                ap_phi_reg_pp0_iter5_res_1_4_reg_285 <= ap_phi_reg_pp0_iter4_res_1_4_reg_285;
                ap_phi_reg_pp0_iter5_the_assign_reg_263 <= ap_phi_reg_pp0_iter4_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter6_res_0_1_reg_275 <= ap_phi_reg_pp0_iter5_res_0_1_reg_275;
                ap_phi_reg_pp0_iter6_res_0_4_reg_297 <= ap_phi_reg_pp0_iter5_res_0_4_reg_297;
                ap_phi_reg_pp0_iter6_res_1_4_reg_285 <= ap_phi_reg_pp0_iter5_res_1_4_reg_285;
                ap_phi_reg_pp0_iter6_the_assign_reg_263 <= ap_phi_reg_pp0_iter5_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter7_res_0_1_reg_275 <= ap_phi_reg_pp0_iter6_res_0_1_reg_275;
                ap_phi_reg_pp0_iter7_res_0_4_reg_297 <= ap_phi_reg_pp0_iter6_res_0_4_reg_297;
                ap_phi_reg_pp0_iter7_res_1_4_reg_285 <= ap_phi_reg_pp0_iter6_res_1_4_reg_285;
                ap_phi_reg_pp0_iter7_the_assign_reg_263 <= ap_phi_reg_pp0_iter6_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter8_res_0_1_reg_275 <= ap_phi_reg_pp0_iter7_res_0_1_reg_275;
                ap_phi_reg_pp0_iter8_res_0_4_reg_297 <= ap_phi_reg_pp0_iter7_res_0_4_reg_297;
                ap_phi_reg_pp0_iter8_res_1_4_reg_285 <= ap_phi_reg_pp0_iter7_res_1_4_reg_285;
                ap_phi_reg_pp0_iter8_the_assign_reg_263 <= ap_phi_reg_pp0_iter7_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ap_phi_reg_pp0_iter9_res_0_1_reg_275 <= ap_phi_reg_pp0_iter8_res_0_1_reg_275;
                ap_phi_reg_pp0_iter9_res_0_4_reg_297 <= ap_phi_reg_pp0_iter8_res_0_4_reg_297;
                ap_phi_reg_pp0_iter9_res_1_4_reg_285 <= ap_phi_reg_pp0_iter8_res_1_4_reg_285;
                ap_phi_reg_pp0_iter9_the_assign_reg_263 <= ap_phi_reg_pp0_iter8_the_assign_reg_263;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                b_1_reg_1833 <= b_1_fu_759_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_1764 <= exitcond_flatten_fu_608_p2;
                exitcond_flatten_reg_1764_pp0_iter10_reg <= exitcond_flatten_reg_1764_pp0_iter9_reg;
                exitcond_flatten_reg_1764_pp0_iter11_reg <= exitcond_flatten_reg_1764_pp0_iter10_reg;
                exitcond_flatten_reg_1764_pp0_iter12_reg <= exitcond_flatten_reg_1764_pp0_iter11_reg;
                exitcond_flatten_reg_1764_pp0_iter13_reg <= exitcond_flatten_reg_1764_pp0_iter12_reg;
                exitcond_flatten_reg_1764_pp0_iter14_reg <= exitcond_flatten_reg_1764_pp0_iter13_reg;
                exitcond_flatten_reg_1764_pp0_iter15_reg <= exitcond_flatten_reg_1764_pp0_iter14_reg;
                exitcond_flatten_reg_1764_pp0_iter16_reg <= exitcond_flatten_reg_1764_pp0_iter15_reg;
                exitcond_flatten_reg_1764_pp0_iter17_reg <= exitcond_flatten_reg_1764_pp0_iter16_reg;
                exitcond_flatten_reg_1764_pp0_iter18_reg <= exitcond_flatten_reg_1764_pp0_iter17_reg;
                exitcond_flatten_reg_1764_pp0_iter19_reg <= exitcond_flatten_reg_1764_pp0_iter18_reg;
                exitcond_flatten_reg_1764_pp0_iter1_reg <= exitcond_flatten_reg_1764;
                exitcond_flatten_reg_1764_pp0_iter20_reg <= exitcond_flatten_reg_1764_pp0_iter19_reg;
                exitcond_flatten_reg_1764_pp0_iter21_reg <= exitcond_flatten_reg_1764_pp0_iter20_reg;
                exitcond_flatten_reg_1764_pp0_iter22_reg <= exitcond_flatten_reg_1764_pp0_iter21_reg;
                exitcond_flatten_reg_1764_pp0_iter23_reg <= exitcond_flatten_reg_1764_pp0_iter22_reg;
                exitcond_flatten_reg_1764_pp0_iter24_reg <= exitcond_flatten_reg_1764_pp0_iter23_reg;
                exitcond_flatten_reg_1764_pp0_iter25_reg <= exitcond_flatten_reg_1764_pp0_iter24_reg;
                exitcond_flatten_reg_1764_pp0_iter26_reg <= exitcond_flatten_reg_1764_pp0_iter25_reg;
                exitcond_flatten_reg_1764_pp0_iter27_reg <= exitcond_flatten_reg_1764_pp0_iter26_reg;
                exitcond_flatten_reg_1764_pp0_iter28_reg <= exitcond_flatten_reg_1764_pp0_iter27_reg;
                exitcond_flatten_reg_1764_pp0_iter29_reg <= exitcond_flatten_reg_1764_pp0_iter28_reg;
                exitcond_flatten_reg_1764_pp0_iter2_reg <= exitcond_flatten_reg_1764_pp0_iter1_reg;
                exitcond_flatten_reg_1764_pp0_iter30_reg <= exitcond_flatten_reg_1764_pp0_iter29_reg;
                exitcond_flatten_reg_1764_pp0_iter31_reg <= exitcond_flatten_reg_1764_pp0_iter30_reg;
                exitcond_flatten_reg_1764_pp0_iter32_reg <= exitcond_flatten_reg_1764_pp0_iter31_reg;
                exitcond_flatten_reg_1764_pp0_iter33_reg <= exitcond_flatten_reg_1764_pp0_iter32_reg;
                exitcond_flatten_reg_1764_pp0_iter34_reg <= exitcond_flatten_reg_1764_pp0_iter33_reg;
                exitcond_flatten_reg_1764_pp0_iter35_reg <= exitcond_flatten_reg_1764_pp0_iter34_reg;
                exitcond_flatten_reg_1764_pp0_iter3_reg <= exitcond_flatten_reg_1764_pp0_iter2_reg;
                exitcond_flatten_reg_1764_pp0_iter4_reg <= exitcond_flatten_reg_1764_pp0_iter3_reg;
                exitcond_flatten_reg_1764_pp0_iter5_reg <= exitcond_flatten_reg_1764_pp0_iter4_reg;
                exitcond_flatten_reg_1764_pp0_iter6_reg <= exitcond_flatten_reg_1764_pp0_iter5_reg;
                exitcond_flatten_reg_1764_pp0_iter7_reg <= exitcond_flatten_reg_1764_pp0_iter6_reg;
                exitcond_flatten_reg_1764_pp0_iter8_reg <= exitcond_flatten_reg_1764_pp0_iter7_reg;
                exitcond_flatten_reg_1764_pp0_iter9_reg <= exitcond_flatten_reg_1764_pp0_iter8_reg;
                reg_511_pp0_iter10_reg <= reg_511_pp0_iter9_reg;
                reg_511_pp0_iter11_reg <= reg_511_pp0_iter10_reg;
                reg_511_pp0_iter12_reg <= reg_511_pp0_iter11_reg;
                reg_511_pp0_iter13_reg <= reg_511_pp0_iter12_reg;
                reg_511_pp0_iter14_reg <= reg_511_pp0_iter13_reg;
                reg_511_pp0_iter15_reg <= reg_511_pp0_iter14_reg;
                reg_511_pp0_iter16_reg <= reg_511_pp0_iter15_reg;
                reg_511_pp0_iter17_reg <= reg_511_pp0_iter16_reg;
                reg_511_pp0_iter18_reg <= reg_511_pp0_iter17_reg;
                reg_511_pp0_iter19_reg <= reg_511_pp0_iter18_reg;
                reg_511_pp0_iter20_reg <= reg_511_pp0_iter19_reg;
                reg_511_pp0_iter21_reg <= reg_511_pp0_iter20_reg;
                reg_511_pp0_iter22_reg <= reg_511_pp0_iter21_reg;
                reg_511_pp0_iter23_reg <= reg_511_pp0_iter22_reg;
                reg_511_pp0_iter24_reg <= reg_511_pp0_iter23_reg;
                reg_511_pp0_iter25_reg <= reg_511_pp0_iter24_reg;
                reg_511_pp0_iter26_reg <= reg_511_pp0_iter25_reg;
                reg_511_pp0_iter27_reg <= reg_511_pp0_iter26_reg;
                reg_511_pp0_iter28_reg <= reg_511_pp0_iter27_reg;
                reg_511_pp0_iter29_reg <= reg_511_pp0_iter28_reg;
                reg_511_pp0_iter2_reg <= reg_511;
                reg_511_pp0_iter30_reg <= reg_511_pp0_iter29_reg;
                reg_511_pp0_iter31_reg <= reg_511_pp0_iter30_reg;
                reg_511_pp0_iter32_reg <= reg_511_pp0_iter31_reg;
                reg_511_pp0_iter33_reg <= reg_511_pp0_iter32_reg;
                reg_511_pp0_iter34_reg <= reg_511_pp0_iter33_reg;
                reg_511_pp0_iter3_reg <= reg_511_pp0_iter2_reg;
                reg_511_pp0_iter4_reg <= reg_511_pp0_iter3_reg;
                reg_511_pp0_iter5_reg <= reg_511_pp0_iter4_reg;
                reg_511_pp0_iter6_reg <= reg_511_pp0_iter5_reg;
                reg_511_pp0_iter7_reg <= reg_511_pp0_iter6_reg;
                reg_511_pp0_iter8_reg <= reg_511_pp0_iter7_reg;
                reg_511_pp0_iter9_reg <= reg_511_pp0_iter8_reg;
                tmp_i_i_i1_i_reg_1848_pp0_iter9_reg <= tmp_i_i_i1_i_reg_1848;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                h <= height;
                rot_y_0_0_reg_1723 <= grp_sin_or_cos_float_s_fu_321_ap_return;
                rot_y_0_2_reg_1734 <= rot_y_0_2_fu_584_p1;
                rot_y_2_0_reg_1729 <= grp_sin_or_cos_float_s_fu_336_ap_return;
                rot_z_0_0_reg_1739 <= grp_sin_or_cos_float_s_fu_351_ap_return;
                rot_z_0_1_reg_1745 <= grp_sin_or_cos_float_s_fu_366_ap_return;
                rot_z_1_0_reg_1750 <= rot_z_1_0_fu_598_p1;
                tmp_143_reg_1717 <= grp_fu_467_p1;
                tmp_149_reg_1755 <= tmp_149_fu_602_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764 = ap_const_lv1_0))) then
                i_1_reg_1788 <= grp_fu_388_p2;
                i_mid2_reg_1813 <= i_mid2_fu_702_p3;
                j_reg_1823 <= grp_fu_400_p2;
                tmp_152_mid2_v_reg_1807 <= tmp_152_mid2_v_fu_694_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter28_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                m_reg_2341 <= grp_fu_464_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                m_reg_2341_pp0_iter29_reg <= m_reg_2341;
                p2_2_reg_1948_pp0_iter14_reg <= p2_2_reg_1948;
                p2_2_reg_1948_pp0_iter15_reg <= p2_2_reg_1948_pp0_iter14_reg;
                p3_2_reg_2005_pp0_iter17_reg <= p3_2_reg_2005;
                tmp_15_i1_reg_1984_pp0_iter15_reg <= tmp_15_i1_reg_1984;
                tmp_42_i_i_reg_2266_pp0_iter21_reg <= tmp_42_i_i_reg_2266;
                tmp_42_i_i_reg_2266_pp0_iter22_reg <= tmp_42_i_i_reg_2266_pp0_iter21_reg;
                tmp_42_i_i_reg_2266_pp0_iter23_reg <= tmp_42_i_i_reg_2266_pp0_iter22_reg;
                tmp_42_i_i_reg_2266_pp0_iter24_reg <= tmp_42_i_i_reg_2266_pp0_iter23_reg;
                tmp_42_i_i_reg_2266_pp0_iter25_reg <= tmp_42_i_i_reg_2266_pp0_iter24_reg;
                tmp_42_i_i_reg_2266_pp0_iter26_reg <= tmp_42_i_i_reg_2266_pp0_iter25_reg;
                tmp_i_i_i2_i_reg_1853_pp0_iter9_reg <= tmp_i_i_i2_i_reg_1853;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter17_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                maxAxis_5_reg_2204 <= maxAxis_5_fu_1376_p3;
                or_cond1_i_reg_2172 <= or_cond1_i_fu_1224_p2;
                sel_tmp12_i_reg_2196 <= sel_tmp12_i_fu_1370_p2;
                sel_tmp16_i_reg_2209 <= sel_tmp16_i_fu_1383_p2;
                sel_tmp3_i_reg_2184 <= sel_tmp3_i_fu_1321_p2;
                sel_tmp7_i_reg_2190 <= sel_tmp7_i_fu_1345_p2;
                tmp_306_reg_2165 <= tmp_306_fu_1208_p2;
                tmp_337_reg_2178 <= tmp_337_fu_1304_p2;
                vc_5_reg_2215 <= vc_5_fu_1396_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter17_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                maxAxis_7_reg_2220 <= maxAxis_7_fu_1473_p3;
                tmp_i_i1_reg_2236 <= tmp_i_i1_fu_1598_p2;
                tmp_i_i2_reg_2241 <= tmp_i_i2_fu_1616_p3;
                uc_1_reg_2226 <= uc_1_fu_1517_p3;
                vc_8_reg_2231 <= vc_8_fu_1536_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                maxAxis_reg_2060 <= grp_fu_464_p1;
                tmp_297_reg_2070 <= grp_fu_470_p2;
                tmp_301_reg_2075 <= grp_fu_476_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                maxAxis_reg_2060_pp0_iter17_reg <= maxAxis_reg_2060;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1764_pp0_iter12_reg = ap_const_lv1_0))) then
                p2_0_reg_1935 <= grp_fu_400_p2;
                p2_1_reg_1942 <= grp_fu_406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter13_reg = ap_const_lv1_0))) then
                p2_2_reg_1948 <= grp_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0))) then
                p3_2_reg_2005 <= grp_fu_406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter30_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                phi_reg_2370 <= grp_fu_388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then
                reg_501 <= grp_fu_418_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then
                reg_506 <= grp_fu_424_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_0)))) then
                reg_511 <= grp_fu_460_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter4_reg = ap_const_lv1_0)))) then
                reg_517 <= grp_fu_448_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter5_reg = ap_const_lv1_0)))) then
                reg_525 <= grp_fu_453_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1764_pp0_iter27_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0)))) then
                reg_531 <= grp_fu_489_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_344_reg_2351 = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_344_reg_2351 = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then
                reg_536 <= grp_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (tmp_344_reg_2351 = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_344_reg_2351 = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0)))) then
                reg_541 <= grp_fu_460_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_344_reg_2351_pp0_iter29_reg = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter30_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_344_reg_2351_pp0_iter29_reg = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter30_reg = ap_const_lv1_0)))) then
                reg_546 <= grp_fu_436_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_344_reg_2351_pp0_iter32_reg = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter33_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_344_reg_2351_pp0_iter32_reg = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter33_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then
                reg_551 <= grp_fu_448_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                res_0_1_reg_275 <= ap_phi_reg_pp0_iter34_res_0_1_reg_275;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter9_reg = ap_const_lv1_0))) then
                sp_reg_1858 <= grp_sin_or_cos_float_s_fu_321_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter20_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_138_i_reg_2276 <= grp_fu_448_p2;
                tmp_140_i_reg_2281 <= grp_fu_453_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter22_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_139_i_reg_2286 <= grp_fu_394_p2;
                tmp_141_i_reg_2291 <= grp_fu_400_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter15_reg = ap_const_lv1_0))) then
                tmp_14_i1_reg_1990 <= grp_fu_388_p2;
                tmp_18_i2_reg_1995 <= grp_fu_394_p2;
                tmp_22_i1_reg_2000 <= grp_fu_400_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1764_pp0_iter11_reg = ap_const_lv1_0))) then
                tmp_14_i_reg_1920 <= grp_fu_382_p2;
                tmp_18_i_reg_1925 <= grp_fu_388_p2;
                tmp_22_i_reg_1930 <= grp_fu_394_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter14_reg = ap_const_lv1_0))) then
                tmp_15_i1_reg_1984 <= grp_fu_431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter10_reg = ap_const_lv1_0))) then
                tmp_15_i_reg_1884 <= grp_fu_418_p2;
                tmp_19_i_reg_1889 <= grp_fu_424_p2;
                tmp_23_i_reg_1894 <= grp_fu_431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_15_i_reg_1884_pp0_iter11_reg <= tmp_15_i_reg_1884;
                tmp_19_i_reg_1889_pp0_iter11_reg <= tmp_19_i_reg_1889;
                tmp_23_i_reg_1894_pp0_iter11_reg <= tmp_23_i_reg_1894;
                tmp_305_reg_2045_pp0_iter17_reg <= tmp_305_reg_2045;
                tmp_48_i_i_reg_2271_pp0_iter21_reg <= tmp_48_i_i_reg_2271;
                tmp_48_i_i_reg_2271_pp0_iter22_reg <= tmp_48_i_i_reg_2271_pp0_iter21_reg;
                tmp_48_i_i_reg_2271_pp0_iter23_reg <= tmp_48_i_i_reg_2271_pp0_iter22_reg;
                tmp_48_i_i_reg_2271_pp0_iter24_reg <= tmp_48_i_i_reg_2271_pp0_iter23_reg;
                tmp_48_i_i_reg_2271_pp0_iter25_reg <= tmp_48_i_i_reg_2271_pp0_iter24_reg;
                tmp_59_reg_2050_pp0_iter17_reg <= tmp_59_reg_2050;
                tmp_59_reg_2050_pp0_iter18_reg <= tmp_59_reg_2050_pp0_iter17_reg;
                tmp_59_reg_2050_pp0_iter19_reg <= tmp_59_reg_2050_pp0_iter18_reg;
                tmp_59_reg_2050_pp0_iter20_reg <= tmp_59_reg_2050_pp0_iter19_reg;
                tmp_59_reg_2050_pp0_iter21_reg <= tmp_59_reg_2050_pp0_iter20_reg;
                tmp_59_reg_2050_pp0_iter22_reg <= tmp_59_reg_2050_pp0_iter21_reg;
                tmp_59_reg_2050_pp0_iter23_reg <= tmp_59_reg_2050_pp0_iter22_reg;
                tmp_59_reg_2050_pp0_iter24_reg <= tmp_59_reg_2050_pp0_iter23_reg;
                tmp_59_reg_2050_pp0_iter25_reg <= tmp_59_reg_2050_pp0_iter24_reg;
                tmp_59_reg_2050_pp0_iter26_reg <= tmp_59_reg_2050_pp0_iter25_reg;
                tmp_59_reg_2050_pp0_iter27_reg <= tmp_59_reg_2050_pp0_iter26_reg;
                tmp_59_reg_2050_pp0_iter28_reg <= tmp_59_reg_2050_pp0_iter27_reg;
                tmp_59_reg_2050_pp0_iter29_reg <= tmp_59_reg_2050_pp0_iter28_reg;
                tmp_59_reg_2050_pp0_iter30_reg <= tmp_59_reg_2050_pp0_iter29_reg;
                tmp_59_reg_2050_pp0_iter31_reg <= tmp_59_reg_2050_pp0_iter30_reg;
                tmp_59_reg_2050_pp0_iter32_reg <= tmp_59_reg_2050_pp0_iter31_reg;
                tmp_59_reg_2050_pp0_iter33_reg <= tmp_59_reg_2050_pp0_iter32_reg;
                tmp_59_reg_2050_pp0_iter34_reg <= tmp_59_reg_2050_pp0_iter33_reg;
                tmp_59_reg_2050_pp0_iter35_reg <= tmp_59_reg_2050_pp0_iter34_reg;
                vc_3_reg_2017_pp0_iter17_reg <= vc_3_reg_2017;
                vc_reg_2029_pp0_iter17_reg <= vc_reg_2029;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter13_reg = ap_const_lv1_0))) then
                tmp_16_i1_reg_1964 <= grp_fu_431_p2;
                tmp_20_i1_reg_1969 <= grp_fu_436_p2;
                tmp_21_i_reg_1974 <= grp_fu_441_p2;
                tmp_i5_46_reg_1959 <= grp_fu_424_p2;
                tmp_i7_reg_1954 <= grp_fu_418_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1764_pp0_iter10_reg = ap_const_lv1_0))) then
                tmp_16_i_reg_1910 <= grp_fu_431_p2;
                tmp_20_i_reg_1915 <= grp_fu_436_p2;
                tmp_i6_reg_1899 <= grp_fu_418_p2;
                tmp_i_45_reg_1904 <= grp_fu_424_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1764_pp0_iter13_reg = ap_const_lv1_0))) then
                tmp_17_i_reg_1979 <= grp_fu_441_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_284_reg_1759 <= grp_fu_470_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_608_p2 = ap_const_lv1_0))) then
                tmp_289_reg_1768 <= grp_fu_476_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp_293_reg_2080 <= grp_fu_470_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0))) then
                tmp_294_reg_2100 <= tmp_294_fu_920_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_305_reg_2045 <= grp_fu_470_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter17_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_314_reg_2115 <= grp_fu_470_p2;
                tmp_322_reg_2120 <= grp_fu_476_p2;
                tmp_325_reg_2125 <= grp_fu_482_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter17_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_316_reg_2130 <= tmp_316_fu_1018_p2;
                tmp_324_reg_2136 <= tmp_324_fu_1070_p2;
                tmp_326_reg_2142 <= tmp_326_fu_1076_p2;
                tmp_329_reg_2148 <= tmp_329_fu_1081_p2;
                tmp_334_reg_2159 <= tmp_334_fu_1087_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp_327_reg_2055 <= tmp_327_fu_849_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter17_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_330_reg_2154 <= grp_fu_476_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter28_reg = ap_const_lv1_0))) then
                tmp_344_reg_2351 <= tmp_344_fu_1668_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_349_reg_2095 <= tmp_349_fu_881_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_353_reg_2040 <= tmp_353_fu_832_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter18_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_41_i_i_reg_2256 <= grp_fu_498_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter20_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_42_i_i_reg_2266 <= grp_fu_494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter25_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_43_i_i_reg_2316 <= grp_fu_467_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter26_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_44_i_i_reg_2331 <= grp_fu_494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter27_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_45_i_i_reg_2336 <= grp_fu_489_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter19_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_47_i_i_reg_2261 <= grp_fu_498_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter20_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_48_i_i_reg_2271 <= grp_fu_494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter23_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                tmp_49_i_i_reg_2306 <= grp_fu_467_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter25_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp_50_i_i_reg_2321 <= grp_fu_494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond6_reg_1796 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_0))) then
                tmp_518_mid1_reg_1828 <= grp_fu_482_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter26 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter26_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp_51_i_i_reg_2326 <= grp_fu_489_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0))) then
                tmp_59_reg_2050 <= tmp_59_fu_839_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter34_reg = ap_const_lv1_0))) then
                tmp_8_i_i_reg_2375 <= grp_fu_448_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1764_pp0_iter7_reg = ap_const_lv1_0))) then
                tmp_i_i_i1_i_reg_1848 <= grp_sin_or_cos_float_s_fu_321_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter8_reg = ap_const_lv1_0))) then
                tmp_i_i_i2_i_reg_1853 <= grp_sin_or_cos_float_s_fu_321_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp_i_i_i_i_i_reg_2365 <= grp_generic_asin_float_s_fu_310_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter23_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                u_reg_2296 <= grp_fu_436_p2;
                v_reg_2301 <= grp_fu_441_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0))) then
                vc_3_reg_2017 <= grp_fu_382_p2;
                vc_reg_2029 <= grp_fu_388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                w <= width;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter10_reg = ap_const_lv1_0))) then
                x_reg_1871 <= grp_fu_418_p2;
                y_reg_1878 <= grp_fu_424_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter24_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then
                y_assign_reg_2311 <= grp_fu_406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                z_reg_1864 <= grp_sin_or_cos_float_s_fu_321_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1764, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter35, ap_block_pp0_stage4_subdone, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter36, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state218;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state218;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state218 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_1_fu_674_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(ap_phi_mux_a_phi_fu_245_p4));
    a_assign_1_fu_660_p3 <= 
        grp_fu_382_p2 when (tmp_285_fu_655_p2(0) = '1') else 
        i_reg_217;
    a_assign_1_mid1_fu_804_p3 <= 
        grp_fu_406_p2 when (tmp_519_mid1_fu_799_p2(0) = '1') else 
        i_1_reg_1788;
    a_assign_fu_751_p3 <= 
        grp_fu_394_p2 when (tmp_290_fu_746_p2(0) = '1') else 
        j_1_reg_229;
    absX_i_to_int_fu_937_p1 <= absX_reg_2085;
    absY_i_to_int_fu_954_p1 <= absY_reg_2104;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(36);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(37);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(38);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(39);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(40);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state218 <= ap_CS_fsm(41);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_NS_fsm_state21 <= ap_NS_fsm(20);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state100_pp0_stage3_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state101_pp0_stage4_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state102_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state103_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state104_pp0_stage2_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state105_pp0_stage3_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state106_pp0_stage4_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state107_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state108_pp0_stage1_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state109_pp0_stage2_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state110_pp0_stage3_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state111_pp0_stage4_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state112_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state113_pp0_stage1_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state114_pp0_stage2_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state115_pp0_stage3_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state116_pp0_stage4_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state117_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state118_pp0_stage1_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state119_pp0_stage2_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state120_pp0_stage3_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state121_pp0_stage4_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state122_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state123_pp0_stage1_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state124_pp0_stage2_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state125_pp0_stage3_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state126_pp0_stage4_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state127_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state128_pp0_stage1_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state129_pp0_stage2_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state130_pp0_stage3_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state131_pp0_stage4_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state132_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state133_pp0_stage1_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state134_pp0_stage2_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state135_pp0_stage3_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state136_pp0_stage4_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state137_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state138_pp0_stage1_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state139_pp0_stage2_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state140_pp0_stage3_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state141_pp0_stage4_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state142_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state143_pp0_stage1_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state144_pp0_stage2_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state145_pp0_stage3_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state146_pp0_stage4_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state147_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state148_pp0_stage1_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state149_pp0_stage2_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state150_pp0_stage3_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state151_pp0_stage4_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state152_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state153_pp0_stage1_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state154_pp0_stage2_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state155_pp0_stage3_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state156_pp0_stage4_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state157_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state158_pp0_stage1_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state159_pp0_stage2_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state160_pp0_stage3_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state161_pp0_stage4_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state162_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state163_pp0_stage1_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state164_pp0_stage2_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state165_pp0_stage3_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state166_pp0_stage4_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state167_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state168_pp0_stage1_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state169_pp0_stage2_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state170_pp0_stage3_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state171_pp0_stage4_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state172_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state173_pp0_stage1_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state174_pp0_stage2_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state175_pp0_stage3_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state176_pp0_stage4_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state177_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state178_pp0_stage1_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state179_pp0_stage2_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state180_pp0_stage3_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state181_pp0_stage4_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state182_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state183_pp0_stage1_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state184_pp0_stage2_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state185_pp0_stage3_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state186_pp0_stage4_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state187_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state188_pp0_stage1_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state189_pp0_stage2_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state190_pp0_stage3_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state191_pp0_stage4_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state192_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state193_pp0_stage1_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state194_pp0_stage2_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state195_pp0_stage3_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state196_pp0_stage4_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state197_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state198_pp0_stage1_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state199_pp0_stage2_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state200_pp0_stage3_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state201_pp0_stage4_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state202_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state203_pp0_stage1_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state204_pp0_stage2_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state205_pp0_stage3_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state206_pp0_stage4_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state207_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state208_pp0_stage1_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state209_pp0_stage2_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state210_pp0_stage3_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state211_pp0_stage4_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state212_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state213_pp0_stage1_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state214_pp0_stage2_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state215_pp0_stage3_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state216_pp0_stage4_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state217_pp0_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp0_stage4_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp0_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp0_stage3_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp0_stage4_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state93_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp0_stage2_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state95_pp0_stage3_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state96_pp0_stage4_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp0_stage2_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1386_assign_proc : process(tmp_149_reg_1755, exitcond_flatten_reg_1764_pp0_iter16_reg, tmp_294_fu_920_p2)
    begin
                ap_condition_1386 <= ((tmp_294_fu_920_p2 = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0));
    end process;


    ap_condition_930_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter16)
    begin
                ap_condition_930 <= ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4));
    end process;


    ap_condition_pp0_exit_iter0_state41_assign_proc : process(exitcond_flatten_reg_1764)
    begin
        if ((exitcond_flatten_reg_1764 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state41 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state41 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state218)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state218)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter36)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_a_phi_fu_245_p4_assign_proc : process(a_reg_241, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1764_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, tmp_152_mid2_v_reg_1807, ap_block_pp0_stage4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            ap_phi_mux_a_phi_fu_245_p4 <= tmp_152_mid2_v_reg_1807;
        else 
            ap_phi_mux_a_phi_fu_245_p4 <= a_reg_241;
        end if; 
    end process;


    ap_phi_mux_b_phi_fu_256_p4_assign_proc : process(b_reg_252, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1764_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, b_1_reg_1833, ap_block_pp0_stage4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            ap_phi_mux_b_phi_fu_256_p4 <= b_1_reg_1833;
        else 
            ap_phi_mux_b_phi_fu_256_p4 <= b_reg_252;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_221_p4_assign_proc : process(i_reg_217, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1764, ap_CS_fsm_pp0_stage0, i_mid2_reg_1813, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_221_p4 <= i_mid2_reg_1813;
        else 
            ap_phi_mux_i_phi_fu_221_p4 <= i_reg_217;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_209_p4_assign_proc : process(indvar_flatten_reg_205, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1764, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1783, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_209_p4 <= indvar_flatten_next_reg_1783;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_209_p4 <= indvar_flatten_reg_205;
        end if; 
    end process;


    ap_phi_mux_j_1_phi_fu_233_p4_assign_proc : process(j_1_reg_229, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1764, ap_CS_fsm_pp0_stage0, j_reg_1823, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_j_1_phi_fu_233_p4 <= j_reg_1823;
        else 
            ap_phi_mux_j_1_phi_fu_233_p4 <= j_1_reg_229;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_res_0_1_reg_275 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_res_0_4_reg_297 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_res_1_4_reg_285 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_the_assign_reg_263 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state218)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state218)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_1_fu_759_p2 <= std_logic_vector(unsigned(b_mid2_reg_1801) + unsigned(ap_const_lv11_1));
    b_mid2_fu_686_p3 <= 
        ap_const_lv11_0 when (exitcond6_fu_680_p2(0) = '1') else 
        ap_phi_mux_b_phi_fu_256_p4;
    exitcond6_fu_680_p2 <= "1" when (ap_phi_mux_b_phi_fu_256_p4 = ap_const_lv11_400) else "0";
    exitcond_flatten_fu_608_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_209_p4 = ap_const_lv21_100000) else "0";
    fov_address0 <= tmp_61_fu_1686_p1(21 - 1 downto 0);
    fov_address1 <= tmp_62_cast_fu_1697_p1(21 - 1 downto 0);

    fov_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)))) then 
            fov_ce0 <= ap_const_logic_1;
        else 
            fov_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fov_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)))) then 
            fov_ce1 <= ap_const_logic_1;
        else 
            fov_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    fov_d0 <= ap_phi_reg_pp0_iter35_res_0_4_reg_297;
    fov_d1 <= ap_phi_reg_pp0_iter35_res_1_4_reg_285;

    fov_we0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, exitcond_flatten_reg_1764_pp0_iter35_reg, ap_enable_reg_pp0_iter35)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter35_reg = ap_const_lv1_0))) then 
            fov_we0 <= ap_const_logic_1;
        else 
            fov_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fov_we1_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, exitcond_flatten_reg_1764_pp0_iter35_reg, ap_enable_reg_pp0_iter35)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter35_reg = ap_const_lv1_0))) then 
            fov_we1 <= ap_const_logic_1;
        else 
            fov_we1 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_382_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter28, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1764_pp0_iter28_reg, tmp_i6_reg_1899, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, tmp_22_i_reg_1930, tmp_14_i1_reg_1990, ap_enable_reg_pp0_iter15, tmp_344_fu_1668_p2, ap_block_pp0_stage0, ap_phi_mux_i_phi_fu_221_p4, ap_block_pp0_stage4, ap_phi_reg_pp0_iter28_the_assign_reg_263, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((((tmp_344_fu_1668_p2 = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter28_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter28_reg = ap_const_lv1_0) and (tmp_344_fu_1668_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_382_p0 <= ap_phi_reg_pp0_iter28_the_assign_reg_263;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_382_p0 <= tmp_14_i1_reg_1990;
        elsif (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_382_p0 <= tmp_22_i_reg_1930;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_382_p0 <= tmp_i6_reg_1899;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_382_p0 <= ap_phi_mux_i_phi_fu_221_p4;
        else 
            grp_fu_382_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_382_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter28, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1764_pp0_iter28_reg, tmp_23_i_reg_1894_pp0_iter11_reg, ap_enable_reg_pp0_iter11, tmp_i_45_reg_1904, ap_enable_reg_pp0_iter12, tmp_15_i1_reg_1984_pp0_iter15_reg, ap_enable_reg_pp0_iter15, tmp_344_fu_1668_p2, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((tmp_344_fu_1668_p2 = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter28_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_382_p1 <= ap_const_lv32_C0490FD0;
        elsif (((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter28_reg = ap_const_lv1_0) and (tmp_344_fu_1668_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_382_p1 <= ap_const_lv32_40490FD0;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_382_p1 <= tmp_15_i1_reg_1984_pp0_iter15_reg;
        elsif (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_382_p1 <= tmp_23_i_reg_1894_pp0_iter11_reg;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_382_p1 <= tmp_i_45_reg_1904;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_382_p1 <= ap_const_lv32_43340000;
        else 
            grp_fu_382_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_388_opcode_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter29, exitcond_flatten_reg_1764_pp0_iter29_reg, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, exitcond_flatten_fu_608_p2, exitcond_flatten_reg_1764_pp0_iter11_reg, exitcond_flatten_reg_1764_pp0_iter14_reg, exitcond_flatten_reg_1764_pp0_iter15_reg, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001)
    begin
        if (((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0))) then 
            grp_fu_388_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter14_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter11_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_608_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter15_reg = ap_const_lv1_0)))) then 
            grp_fu_388_opcode <= ap_const_lv2_0;
        else 
            grp_fu_388_opcode <= "XX";
        end if; 
    end process;


    grp_fu_388_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter29, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter11, tmp_16_i_reg_1910, tmp_i7_reg_1954, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, tmp_18_i2_reg_1995, ap_block_pp0_stage0, ap_phi_mux_i_phi_fu_221_p4, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_388_p0 <= ap_const_lv32_3FC90FDB;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_388_p0 <= tmp_18_i2_reg_1995;
        elsif (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_388_p0 <= tmp_i7_reg_1954;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_388_p0 <= tmp_16_i_reg_1910;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_388_p0 <= ap_phi_mux_i_phi_fu_221_p4;
        else 
            grp_fu_388_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_388_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter29, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, y_reg_1878, ap_enable_reg_pp0_iter11, tmp_i5_46_reg_1959, ap_enable_reg_pp0_iter14, tmp_15_i1_reg_1984_pp0_iter15_reg, ap_enable_reg_pp0_iter15, tmp_i_i_i_i_i_reg_2365, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_388_p1 <= tmp_i_i_i_i_i_reg_2365;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_388_p1 <= tmp_15_i1_reg_1984_pp0_iter15_reg;
        elsif (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_388_p1 <= tmp_i5_46_reg_1959;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_388_p1 <= y_reg_1878;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_388_p1 <= ap_const_lv32_3DB3FFAC;
        else 
            grp_fu_388_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_394_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter11, tmp_20_i_reg_1915, tmp_16_i1_reg_1964, ap_enable_reg_pp0_iter14, tmp_138_i_reg_2276, ap_enable_reg_pp0_iter21, ap_block_pp0_stage0, ap_phi_mux_j_1_phi_fu_233_p4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_394_p0 <= tmp_138_i_reg_2276;
        elsif (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_394_p0 <= tmp_16_i1_reg_1964;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_394_p0 <= tmp_20_i_reg_1915;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_394_p0 <= ap_phi_mux_j_1_phi_fu_233_p4;
        else 
            grp_fu_394_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_394_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter11, tmp_i_45_reg_1904, tmp_17_i_reg_1979, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter21, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_394_p1 <= ap_const_lv32_3F800000;
        elsif (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_394_p1 <= tmp_17_i_reg_1979;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_394_p1 <= tmp_i_45_reg_1904;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_394_p1 <= ap_const_lv32_43B40000;
        else 
            grp_fu_394_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_400_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_14_i_reg_1920, ap_enable_reg_pp0_iter12, tmp_20_i1_reg_1969, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter21, tmp_140_i_reg_2281, ap_block_pp0_stage0, ap_phi_mux_j_1_phi_fu_233_p4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_400_p0 <= tmp_140_i_reg_2281;
        elsif (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_400_p0 <= tmp_20_i1_reg_1969;
        elsif (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_400_p0 <= tmp_14_i_reg_1920;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_400_p0 <= ap_phi_mux_j_1_phi_fu_233_p4;
        else 
            grp_fu_400_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_400_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_15_i_reg_1884_pp0_iter11_reg, ap_enable_reg_pp0_iter12, tmp_21_i_reg_1974, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter21, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_400_p1 <= ap_const_lv32_3F800000;
        elsif (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_400_p1 <= tmp_21_i_reg_1974;
        elsif (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_400_p1 <= tmp_15_i_reg_1884_pp0_iter11_reg;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_400_p1 <= ap_const_lv32_3D6FFC11;
        else 
            grp_fu_400_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_406_opcode_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1764, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, exitcond_flatten_reg_1764_pp0_iter12_reg, exitcond_flatten_reg_1764_pp0_iter15_reg, exitcond_flatten_reg_1764_pp0_iter23_reg, exitcond6_reg_1796, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter23, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter23_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then 
            grp_fu_406_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter15_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter12_reg = ap_const_lv1_0)) or ((exitcond6_reg_1796 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_0)))) then 
            grp_fu_406_opcode <= ap_const_lv2_0;
        else 
            grp_fu_406_opcode <= "XX";
        end if; 
    end process;


    grp_fu_406_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, i_1_reg_1788, ap_enable_reg_pp0_iter12, tmp_18_i_reg_1925, ap_enable_reg_pp0_iter15, tmp_22_i1_reg_2000, ap_enable_reg_pp0_iter23, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_406_p0 <= ap_const_lv32_3F800000;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_406_p0 <= tmp_22_i1_reg_2000;
        elsif (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_406_p0 <= tmp_18_i_reg_1925;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_406_p0 <= i_1_reg_1788;
        else 
            grp_fu_406_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_406_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_19_i_reg_1889_pp0_iter11_reg, ap_enable_reg_pp0_iter12, p2_2_reg_1948_pp0_iter15_reg, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter23, v_reg_2301, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_406_p1 <= v_reg_2301;
        elsif (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_406_p1 <= p2_2_reg_1948_pp0_iter15_reg;
        elsif (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_406_p1 <= tmp_19_i_reg_1889_pp0_iter11_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_406_p1 <= ap_const_lv32_43340000;
        else 
            grp_fu_406_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_418_p0_assign_proc : process(ap_CS_fsm_state1, ht, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, a_assign_reg_1818, sp_reg_1858, ap_enable_reg_pp0_iter9, z_reg_1864, x_reg_1871, ap_enable_reg_pp0_iter10, p2_0_reg_1935, ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_418_p0 <= p2_0_reg_1935;
        elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_418_p0 <= x_reg_1871;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_418_p0 <= z_reg_1864;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_418_p0 <= sp_reg_1858;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_418_p0 <= a_assign_reg_1818;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_418_p0 <= ht;
        else 
            grp_fu_418_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_418_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, rot_y_0_0_reg_1723, rot_y_0_2_reg_1734, rot_z_0_0_reg_1739, tmp_i_i_i1_i_reg_1848_pp0_iter9_reg, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_418_p1 <= rot_z_0_0_reg_1739;
        elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_418_p1 <= rot_y_0_0_reg_1723;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_418_p1 <= rot_y_0_2_reg_1734;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_418_p1 <= tmp_i_i_i1_i_reg_1848_pp0_iter9_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            grp_fu_418_p1 <= ap_const_lv32_40490FD0;
        else 
            grp_fu_418_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_424_p0_assign_proc : process(ap_CS_fsm_state1, hp, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, phi_assign_1_mid2_v_s_fu_811_p3, sp_reg_1858, ap_enable_reg_pp0_iter9, z_reg_1864, ap_enable_reg_pp0_iter10, y_reg_1878, ap_enable_reg_pp0_iter13, p2_1_reg_1942, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_424_p0 <= p2_1_reg_1942;
        elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_424_p0 <= y_reg_1878;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_424_p0 <= z_reg_1864;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_424_p0 <= sp_reg_1858;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_424_p0 <= phi_assign_1_mid2_v_s_fu_811_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_424_p0 <= hp;
        else 
            grp_fu_424_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_424_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, rot_z_0_1_reg_1745, tmp_i_i_i2_i_reg_1853_pp0_iter9_reg, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_424_p1 <= rot_z_0_1_reg_1745;
        elsif ((((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_424_p1 <= ap_const_lv32_0;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_424_p1 <= tmp_i_i_i2_i_reg_1853_pp0_iter9_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            grp_fu_424_p1 <= ap_const_lv32_40490FD0;
        else 
            grp_fu_424_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_431_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter9, z_reg_1864, x_reg_1871, ap_enable_reg_pp0_iter10, p2_0_reg_1935, ap_enable_reg_pp0_iter13, p2_2_reg_1948, tmp_8_i_i_reg_2375, ap_enable_reg_pp0_iter35, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_431_p0 <= tmp_8_i_i_reg_2375;
        elsif (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_431_p0 <= p2_2_reg_1948;
        elsif (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_431_p0 <= p2_0_reg_1935;
        elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_431_p0 <= x_reg_1871;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_431_p0 <= z_reg_1864;
        else 
            grp_fu_431_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_431_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, reg_511_pp0_iter34_reg, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, rot_y_0_0_reg_1723, rot_z_1_0_reg_1750, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter35, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_431_p1 <= reg_511_pp0_iter34_reg;
        elsif (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_431_p1 <= rot_z_1_0_reg_1750;
        elsif ((((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_fu_431_p1 <= ap_const_lv32_0;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_431_p1 <= rot_y_0_0_reg_1723;
        else 
            grp_fu_431_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_436_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, tmp_149_reg_1755, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter29, exitcond_flatten_reg_1764_pp0_iter29_reg, reg_536, tmp_344_reg_2351, ap_CS_fsm_pp0_stage2, x_reg_1871, ap_enable_reg_pp0_iter10, p2_0_reg_1935, ap_enable_reg_pp0_iter13, tmp_139_i_reg_2286, ap_enable_reg_pp0_iter22, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((((tmp_344_reg_2351 = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_344_reg_2351 = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_436_p0 <= reg_536;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_436_p0 <= tmp_139_i_reg_2286;
        elsif (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_436_p0 <= p2_0_reg_1935;
        elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_436_p0 <= x_reg_1871;
        else 
            grp_fu_436_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_436_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, tmp_149_reg_1755, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter29, exitcond_flatten_reg_1764_pp0_iter29_reg, tmp_344_reg_2351, ap_CS_fsm_pp0_stage2, rot_y_2_0_reg_1729, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter22, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((((tmp_344_reg_2351 = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_344_reg_2351 = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter29_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_fu_436_p1 <= ap_const_lv32_3F000000;
        elsif (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_436_p1 <= ap_const_lv32_0;
        elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_436_p1 <= rot_y_2_0_reg_1729;
        else 
            grp_fu_436_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_441_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, tmp_149_reg_1755, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, reg_551, ap_enable_reg_pp0_iter33, exitcond_flatten_reg_1764_pp0_iter33_reg, tmp_344_reg_2351_pp0_iter32_reg, ap_enable_reg_pp0_iter13, p2_1_reg_1942, ap_enable_reg_pp0_iter22, tmp_141_i_reg_2291, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((((tmp_344_reg_2351_pp0_iter32_reg = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter33_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_344_reg_2351_pp0_iter32_reg = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter33_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_441_p0 <= reg_551;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_441_p0 <= tmp_141_i_reg_2291;
        elsif ((((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            grp_fu_441_p0 <= p2_1_reg_1942;
        else 
            grp_fu_441_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_441_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, tmp_149_reg_1755, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, reg_541_pp0_iter32_reg, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter33, exitcond_flatten_reg_1764_pp0_iter33_reg, tmp_344_reg_2351_pp0_iter32_reg, rot_z_0_0_reg_1739, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter22, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((((tmp_344_reg_2351_pp0_iter32_reg = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter33_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_344_reg_2351_pp0_iter32_reg = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter33_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_441_p1 <= reg_541_pp0_iter32_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_441_p1 <= ap_const_lv32_3F000000;
        elsif (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_441_p1 <= rot_z_0_0_reg_1739;
        elsif (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_441_p1 <= ap_const_lv32_0;
        else 
            grp_fu_441_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_448_p0_assign_proc : process(reg_501, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, reg_511, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_state20, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, reg_546, ap_enable_reg_pp0_iter30, exitcond_flatten_reg_1764_pp0_iter30_reg, tmp_344_reg_2351_pp0_iter29_reg, uc_1_reg_2226, phi_reg_2370, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter31, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_448_p0 <= phi_reg_2370;
        elsif ((((tmp_344_reg_2351_pp0_iter29_reg = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter30_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_344_reg_2351_pp0_iter29_reg = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter30_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_fu_448_p0 <= reg_546;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_448_p0 <= uc_1_reg_2226;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_448_p0 <= reg_511;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_448_p0 <= reg_501;
        else 
            grp_fu_448_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_448_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_state20, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter30, exitcond_flatten_reg_1764_pp0_iter30_reg, tmp_344_reg_2351_pp0_iter29_reg, maxAxis_7_reg_2220, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter31, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_CS_fsm_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((tmp_344_reg_2351_pp0_iter29_reg = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter30_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_344_reg_2351_pp0_iter29_reg = ap_const_lv1_0) and (exitcond_flatten_reg_1764_pp0_iter30_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_fu_448_p1 <= ap_const_lv32_40490FD0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_448_p1 <= maxAxis_7_reg_2220;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_448_p1 <= ap_const_lv32_40400000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_448_p1 <= ap_const_lv32_43340000;
        else 
            grp_fu_448_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_453_p0_assign_proc : process(reg_506, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, vc_8_reg_2231, ap_enable_reg_pp0_iter18, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_453_p0 <= vc_8_reg_2231;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_453_p0 <= reg_506;
        else 
            grp_fu_453_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_453_p1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, maxAxis_7_reg_2220, ap_enable_reg_pp0_iter18, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_453_p1 <= maxAxis_7_reg_2220;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_453_p1 <= ap_const_lv32_43340000;
        else 
            grp_fu_453_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_460_p0_assign_proc : process(width, w, h, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter28, ap_CS_fsm_state14, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1764_pp0_iter28_reg, tmp_344_fu_1668_p2, ap_block_pp0_stage0, ap_block_pp0_stage4)
    begin
        if ((((tmp_344_fu_1668_p2 = ap_const_lv1_1) and (tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter28_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter28_reg = ap_const_lv1_0) and (tmp_344_fu_1668_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_460_p0 <= w;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_460_p0 <= h;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_460_p0 <= width;
        else 
            grp_fu_460_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_464_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, reg_531, ap_enable_reg_pp0_iter28, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter29, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3, ret_i_i_i_i_i1_i_fu_860_p1, ret_i_i_i_i_i_i_fu_872_p1, ret_i_i_i_i_i5_i_fu_932_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            grp_fu_464_p0 <= reg_531;
        elsif (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_464_p0 <= ret_i_i_i_i_i5_i_fu_932_p1;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_464_p0 <= ret_i_i_i_i_i_i_fu_872_p1;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_464_p0 <= ret_i_i_i_i_i1_i_fu_860_p1;
        else 
            grp_fu_464_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_467_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, reg_517, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_state36, p3_2_reg_2005, ap_enable_reg_pp0_iter16, vc_3_reg_2017, vc_reg_2029, u_reg_2296, ap_enable_reg_pp0_iter24, y_assign_reg_2311, ap_enable_reg_pp0_iter25, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_467_p0 <= y_assign_reg_2311;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_467_p0 <= u_reg_2296;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_467_p0 <= vc_reg_2029;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_467_p0 <= vc_3_reg_2017;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_467_p0 <= p3_2_reg_2005;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_467_p0 <= reg_517;
        else 
            grp_fu_467_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_470_opcode_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter28, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1764_pp0_iter16_reg, exitcond_flatten_reg_1764_pp0_iter17_reg, exitcond_flatten_reg_1764_pp0_iter28_reg, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter17_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then 
            grp_fu_470_opcode <= ap_const_lv5_3;
        elsif (((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0))) then 
            grp_fu_470_opcode <= ap_const_lv5_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_1764_pp0_iter28_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0)))) then 
            grp_fu_470_opcode <= ap_const_lv5_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_470_opcode <= ap_const_lv5_4;
        else 
            grp_fu_470_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_470_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter28, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1764_pp0_iter16_reg, p3_2_reg_2005, ap_enable_reg_pp0_iter16, vc_3_reg_2017, absX_reg_2085, ap_enable_reg_pp0_iter17, ap_block_pp0_stage0, ap_phi_mux_i_phi_fu_221_p4, ap_block_pp0_stage4, ap_phi_reg_pp0_iter28_the_assign_reg_263, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_470_p0 <= ap_phi_reg_pp0_iter28_the_assign_reg_263;
        elsif (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_470_p0 <= absX_reg_2085;
        elsif ((((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_fu_470_p0 <= vc_3_reg_2017;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_470_p0 <= p3_2_reg_2005;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_470_p0 <= ap_phi_mux_i_phi_fu_221_p4;
        else 
            grp_fu_470_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_470_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter28, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1764_pp0_iter16_reg, ap_enable_reg_pp0_iter16, absY_reg_2104, ap_enable_reg_pp0_iter17, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_470_p1 <= ap_const_lv32_40490FD0;
        elsif (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_470_p1 <= absY_reg_2104;
        elsif ((((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((tmp_149_reg_1755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_fu_470_p1 <= ap_const_lv32_0;
        else 
            grp_fu_470_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_476_opcode_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, exitcond_flatten_fu_608_p2, exitcond_flatten_reg_1764_pp0_iter16_reg, exitcond_flatten_reg_1764_pp0_iter17_reg, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter17_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter17_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0)))) then 
            grp_fu_476_opcode <= ap_const_lv5_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter16_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0))) then 
            grp_fu_476_opcode <= ap_const_lv5_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_608_p2 = ap_const_lv1_0))) then 
            grp_fu_476_opcode <= ap_const_lv5_4;
        else 
            grp_fu_476_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_476_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter16, vc_reg_2029, absX_reg_2085, absY_reg_2104, ap_enable_reg_pp0_iter17, ap_block_pp0_stage0, ap_phi_mux_j_1_phi_fu_233_p4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_476_p0 <= absY_reg_2104;
        elsif (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_476_p0 <= absX_reg_2085;
        elsif (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_476_p0 <= vc_reg_2029;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_476_p0 <= ap_phi_mux_j_1_phi_fu_233_p4;
        else 
            grp_fu_476_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_476_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter16, maxAxis_reg_2060, ap_enable_reg_pp0_iter17, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            grp_fu_476_p1 <= maxAxis_reg_2060;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_fu_476_p1 <= ap_const_lv32_0;
        else 
            grp_fu_476_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_482_opcode_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1764, ap_CS_fsm_pp0_stage0, tmp_149_reg_1755, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, exitcond_flatten_reg_1764_pp0_iter17_reg, exitcond6_reg_1796, ap_enable_reg_pp0_iter17, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1764_pp0_iter17_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1764_pp0_iter17_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter17_reg = ap_const_lv1_0) and (tmp_149_reg_1755 = ap_const_lv1_0)))) then 
            grp_fu_482_opcode <= ap_const_lv5_3;
        elsif (((exitcond6_reg_1796 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1764 = ap_const_lv1_0))) then 
            grp_fu_482_opcode <= ap_const_lv5_4;
        else 
            grp_fu_482_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_482_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, i_1_reg_1788, maxAxis_reg_2060, absY_reg_2104, ap_enable_reg_pp0_iter17, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_fu_482_p0 <= maxAxis_reg_2060;
        elsif (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_482_p0 <= absY_reg_2104;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_482_p0 <= i_1_reg_1788;
        else 
            grp_fu_482_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_482_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, absX_reg_2085, absY_reg_2104, ap_enable_reg_pp0_iter17, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_482_p1 <= absY_reg_2104;
        elsif ((((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            grp_fu_482_p1 <= absX_reg_2085;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_482_p1 <= ap_const_lv32_0;
        else 
            grp_fu_482_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_489_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter28, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_42_i_i_reg_2266_pp0_iter26_reg, tmp_48_i_i_reg_2271_pp0_iter25_reg, ap_enable_reg_pp0_iter25, tmp_51_i_i_reg_2326, tmp_45_i_i_reg_2336, ap_enable_reg_pp0_iter27, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_489_p0 <= tmp_45_i_i_reg_2336;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_489_p0 <= tmp_51_i_i_reg_2326;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_489_p0 <= tmp_42_i_i_reg_2266_pp0_iter26_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_489_p0 <= tmp_48_i_i_reg_2271_pp0_iter25_reg;
        else 
            grp_fu_489_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_489_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter28, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter25, tmp_50_i_i_reg_2321, tmp_44_i_i_reg_2331, ap_enable_reg_pp0_iter27, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_fu_489_p1 <= ap_const_lv64_BFF0000000000000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_489_p1 <= tmp_44_i_i_reg_2331;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_489_p1 <= tmp_50_i_i_reg_2321;
        else 
            grp_fu_489_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_494_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_143_reg_1717, ap_enable_reg_pp0_iter19, tmp_49_i_i_reg_2306, ap_enable_reg_pp0_iter24, tmp_43_i_i_reg_2316, ap_enable_reg_pp0_iter25, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_494_p0 <= tmp_43_i_i_reg_2316;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_494_p0 <= tmp_49_i_i_reg_2306;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            grp_fu_494_p0 <= tmp_143_reg_1717;
        else 
            grp_fu_494_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_494_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_143_reg_1717, tmp_41_i_i_reg_2256, ap_enable_reg_pp0_iter19, tmp_47_i_i_reg_2261, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_fu_494_p1 <= tmp_143_reg_1717;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_494_p1 <= tmp_47_i_i_reg_2261;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_494_p1 <= tmp_41_i_i_reg_2256;
        else 
            grp_fu_494_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_498_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_i_i2_cast_fu_1624_p1, vertical_i_i_fu_1628_p1, ap_enable_reg_pp0_iter18, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_498_p0 <= vertical_i_i_fu_1628_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_498_p0 <= tmp_i_i2_cast_fu_1624_p1;
            else 
                grp_fu_498_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_498_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_sin_or_cos_float_s_fu_321_ap_start <= grp_sin_or_cos_float_s_fu_321_ap_start_reg;

    grp_sin_or_cos_float_s_fu_321_do_cos_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, exitcond_flatten_reg_1764_pp0_iter4_reg, ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1764_pp0_iter5_reg, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, exitcond_flatten_reg_1764_pp0_iter6_reg, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_CS_fsm_state21, ap_block_pp0_stage3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            grp_sin_or_cos_float_s_fu_321_do_cos <= ap_const_logic_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1764_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_sin_or_cos_float_s_fu_321_do_cos <= ap_const_logic_1;
        else 
            grp_sin_or_cos_float_s_fu_321_do_cos <= 'X';
        end if; 
    end process;


    grp_sin_or_cos_float_s_fu_321_t_in_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, reg_517, exitcond_flatten_reg_1764_pp0_iter4_reg, reg_525, ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1764_pp0_iter5_reg, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, exitcond_flatten_reg_1764_pp0_iter6_reg, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_CS_fsm_state21, ap_block_pp0_stage3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1764_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            grp_sin_or_cos_float_s_fu_321_t_in <= reg_517;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (exitcond_flatten_reg_1764_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_1764_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            grp_sin_or_cos_float_s_fu_321_t_in <= reg_525;
        else 
            grp_sin_or_cos_float_s_fu_321_t_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_sin_or_cos_float_s_fu_336_ap_start <= grp_sin_or_cos_float_s_fu_336_ap_start_reg;
    grp_sin_or_cos_float_s_fu_336_do_cos <= ap_const_logic_0;
    grp_sin_or_cos_float_s_fu_351_ap_start <= grp_sin_or_cos_float_s_fu_351_ap_start_reg;
    grp_sin_or_cos_float_s_fu_351_do_cos <= ap_const_logic_1;
    grp_sin_or_cos_float_s_fu_366_ap_start <= grp_sin_or_cos_float_s_fu_366_ap_start_reg;
    grp_sin_or_cos_float_s_fu_366_do_cos <= ap_const_logic_0;
    i_mid2_fu_702_p3 <= 
        grp_fu_388_p2 when (exitcond6_fu_680_p2(0) = '1') else 
        i_reg_217;
    i_to_int_fu_619_p1 <= i_reg_217;
    i_to_int_mid1_fu_764_p1 <= i_1_reg_1788;
    index_assign_fu_1590_p3 <= 
        sel_tmp97_i_cast_fu_1576_p3 when (tmp_340_fu_1584_p2(0) = '1') else 
        sel_tmp91_i_fu_1568_p3;
    indvar_flatten_next_fu_668_p2 <= std_logic_vector(unsigned(ap_const_lv21_1) + unsigned(indvar_flatten_reg_205));
    j_1_to_int_fu_710_p1 <= j_1_reg_229;
    maxAxis_2_fu_1309_p3 <= 
        maxAxis_reg_2060 when (or_cond1_i_fu_1224_p2(0) = '1') else 
        absX_reg_2085;
    maxAxis_2_i_to_int_fu_1024_p1 <= maxAxis_reg_2060;
    maxAxis_3_fu_1327_p3 <= 
        absX_reg_2085 when (sel_tmp3_i_fu_1321_p2(0) = '1') else 
        maxAxis_2_fu_1309_p3;
    maxAxis_4_fu_1351_p3 <= 
        absY_reg_2104 when (sel_tmp7_i_fu_1345_p2(0) = '1') else 
        maxAxis_3_fu_1327_p3;
    maxAxis_5_fu_1376_p3 <= 
        absY_reg_2104 when (sel_tmp12_i_fu_1370_p2(0) = '1') else 
        maxAxis_4_fu_1351_p3;
    maxAxis_6_fu_1456_p3 <= 
        maxAxis_reg_2060_pp0_iter17_reg when (sel_tmp18_i_fu_1451_p2(0) = '1') else 
        maxAxis_5_reg_2204;
    maxAxis_7_fu_1473_p3 <= 
        maxAxis_reg_2060_pp0_iter17_reg when (sel_tmp24_i_fu_1468_p2(0) = '1') else 
        maxAxis_6_fu_1456_p3;
    notlhs1_fu_728_p2 <= "0" when (tmp_287_fu_714_p4 = ap_const_lv8_FF) else "1";
    notlhs2_fu_902_p2 <= "0" when (tmp_291_fu_888_p4 = ap_const_lv8_FF) else "1";
    notlhs3_fu_1110_p2 <= "0" when (tmp_295_fu_1096_p4 = ap_const_lv8_FF) else "1";
    notlhs4_fu_1150_p2 <= "0" when (tmp_299_fu_1136_p4 = ap_const_lv8_FF) else "1";
    notlhs5_fu_1190_p2 <= "0" when (tmp_303_fu_1176_p4 = ap_const_lv8_FF) else "1";
    notlhs6_fu_971_p2 <= "0" when (tmp_308_fu_940_p4 = ap_const_lv8_FF) else "1";
    notlhs7_fu_989_p2 <= "0" when (tmp_309_fu_957_p4 = ap_const_lv8_FF) else "1";
    notlhs8_fu_1650_p2 <= "0" when (tmp_341_fu_1636_p4 = ap_const_lv8_FF) else "1";
    notlhs9_fu_1041_p2 <= "0" when (tmp_318_fu_1027_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_637_p2 <= "0" when (tmp_282_fu_623_p4 = ap_const_lv8_FF) else "1";
    notlhs_mid1_fu_781_p2 <= "0" when (tmp_515_mid1_fu_767_p4 = ap_const_lv8_FF) else "1";
    notrhs1_fu_734_p2 <= "1" when (tmp_317_fu_724_p1 = ap_const_lv23_0) else "0";
    notrhs2_fu_908_p2 <= "1" when (tmp_319_fu_898_p1 = ap_const_lv23_0) else "0";
    notrhs3_fu_1116_p2 <= "1" when (tmp_354_fu_1106_p1 = ap_const_lv23_0) else "0";
    notrhs4_fu_1156_p2 <= "1" when (tmp_355_fu_1146_p1 = ap_const_lv23_0) else "0";
    notrhs5_fu_1196_p2 <= "1" when (tmp_356_fu_1186_p1 = ap_const_lv23_0) else "0";
    notrhs6_fu_977_p2 <= "1" when (tmp_357_fu_950_p1 = ap_const_lv23_0) else "0";
    notrhs7_fu_995_p2 <= "1" when (tmp_358_fu_967_p1 = ap_const_lv23_0) else "0";
    notrhs8_fu_1656_p2 <= "1" when (tmp_360_fu_1646_p1 = ap_const_lv23_0) else "0";
    notrhs9_fu_1047_p2 <= "1" when (tmp_359_fu_1037_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_643_p2 <= "1" when (tmp_307_fu_633_p1 = ap_const_lv23_0) else "0";
    notrhs_mid1_fu_787_p2 <= "1" when (tmp_312_fu_777_p1 = ap_const_lv23_0) else "0";
    or_cond11_i_fu_1437_p2 <= (tmp_306_reg_2165 or tmp8_fu_1431_p2);
    or_cond1_i_fu_1224_p2 <= (tmp_316_reg_2130 or tmp3_fu_1219_p2);
    or_cond3_i_fu_1233_p2 <= (tmp_298_fu_1128_p2 or tmp4_fu_1229_p2);
    or_cond6_i_fu_1266_p2 <= (tmp_328_fu_1245_p2 or tmp5_fu_1260_p2);
    or_cond8_i_fu_1288_p2 <= (tmp_302_fu_1168_p2 or tmp6_fu_1282_p2);
    or_cond9_i_fu_1425_p2 <= (tmp_335_fu_1409_p2 or tmp7_fu_1419_p2);
    p_Result_36_fu_925_p3 <= (ap_const_lv1_0 & tmp_349_reg_2095);
    p_Result_37_fu_853_p3 <= (ap_const_lv1_0 & tmp_353_reg_2040);
    p_Result_s_fu_865_p3 <= (ap_const_lv1_0 & tmp_327_reg_2055);
    p_Val2_30_fu_877_p1 <= grp_fu_467_p1;
    p_Val2_31_fu_828_p1 <= grp_fu_467_p1;
    p_Val2_s_fu_845_p1 <= grp_fu_467_p1;
    p_not4_i_fu_1239_p2 <= (tmp_302_fu_1168_p2 xor ap_const_lv1_1);
    p_not9_i_fu_1404_p2 <= (tmp_306_reg_2165 xor ap_const_lv1_1);
    p_not_i_fu_1213_p2 <= (tmp_298_fu_1128_p2 xor ap_const_lv1_1);
    phi_assign_1_mid2_v_s_fu_811_p3 <= 
        a_assign_1_mid1_reg_1838 when (exitcond6_reg_1796_pp0_iter1_reg(0) = '1') else 
        a_assign_1_reg_1778_pp0_iter1_reg;
    result_0_write_assi_1_fu_1093_p1 <= vc_3_reg_2017_pp0_iter17_reg;
    result_0_write_assi_fu_885_p1 <= vc_3_reg_2017;
    result_1_write_assi_fu_1133_p1 <= vc_reg_2029_pp0_iter17_reg;
    result_2_write_assi_fu_1173_p1 <= p3_2_reg_2005_pp0_iter17_reg;
    ret_i_i_i_i_i1_i_fu_860_p1 <= p_Result_37_fu_853_p3;
    ret_i_i_i_i_i5_i_fu_932_p1 <= p_Result_36_fu_925_p3;
    ret_i_i_i_i_i_i_fu_872_p1 <= p_Result_s_fu_865_p3;
    rot_y_0_2_fu_584_p1 <= tmp_289_neg_fu_578_p2;
    rot_z_1_0_fu_598_p1 <= tmp_295_neg_fu_592_p2;
    sel_tmp10_i_fu_1358_p2 <= (tmp4_fu_1229_p2 and or_cond6_i_fu_1266_p2);
    sel_tmp11_i_fu_1364_p2 <= (or_cond8_i_fu_1288_p2 xor ap_const_lv1_1);
    sel_tmp12_i_fu_1370_p2 <= (sel_tmp11_i_fu_1364_p2 and sel_tmp10_i_fu_1358_p2);
    sel_tmp16_i_fu_1383_p2 <= (sel_tmp10_i_fu_1358_p2 and or_cond8_i_fu_1288_p2);
    sel_tmp17_i_fu_1446_p2 <= (tmp_334_reg_2159 and tmp7_not_fu_1442_p2);
    sel_tmp18_i_fu_1451_p2 <= (sel_tmp17_i_fu_1446_p2 and sel_tmp16_i_reg_2209);
    sel_tmp24_i_fu_1468_p2 <= (tmp9_fu_1462_p2 and sel_tmp16_i_reg_2209);
    sel_tmp27_v_v_v_i_fu_1480_p3 <= 
        vc_3_reg_2017_pp0_iter17_reg when (or_cond1_i_reg_2172(0) = '1') else 
        p3_2_reg_2005_pp0_iter17_reg;
    sel_tmp2_i_fu_1315_p2 <= (or_cond3_i_fu_1233_p2 xor ap_const_lv1_1);
    sel_tmp30_v_v_v_i_fu_1485_p3 <= 
        p3_2_reg_2005_pp0_iter17_reg when (sel_tmp3_i_reg_2184(0) = '1') else 
        sel_tmp27_v_v_v_i_fu_1480_p3;
    sel_tmp34_v_v_v_i_fu_1491_p3 <= 
        p3_2_reg_2005_pp0_iter17_reg when (sel_tmp7_i_reg_2190(0) = '1') else 
        sel_tmp30_v_v_v_i_fu_1485_p3;
    sel_tmp39_v_i_fu_1507_p2 <= (sel_tmp39_v_v_i_fu_1503_p1 xor ap_const_lv32_80000000);
    sel_tmp39_v_v_i_fu_1503_p1 <= sel_tmp39_v_v_v_i_fu_1497_p3;
    sel_tmp39_v_v_v_i_fu_1497_p3 <= 
        p3_2_reg_2005_pp0_iter17_reg when (sel_tmp12_i_reg_2196(0) = '1') else 
        sel_tmp34_v_v_v_i_fu_1491_p3;
    sel_tmp3_i_fu_1321_p2 <= (sel_tmp2_i_fu_1315_p2 and or_cond1_i_fu_1224_p2);
    sel_tmp6_i_fu_1340_p2 <= (tmp_326_reg_2142 and tmp5_not_fu_1334_p2);
    sel_tmp79_i_fu_1543_p3 <= 
        ap_const_lv3_5 when (sel_tmp3_i_reg_2184(0) = '1') else 
        ap_const_lv3_3;
    sel_tmp7_i_fu_1345_p2 <= (tmp4_fu_1229_p2 and sel_tmp6_i_fu_1340_p2);
    sel_tmp82_i_fu_1550_p3 <= 
        sel_tmp79_i_fu_1543_p3 when (or_cond1_i_reg_2172(0) = '1') else 
        ap_const_lv3_4;
    sel_tmp86_i_cast_fu_1557_p3 <= 
        ap_const_lv3_0 when (sel_tmp12_i_reg_2196(0) = '1') else 
        ap_const_lv3_1;
    sel_tmp91_i_fu_1568_p3 <= 
        sel_tmp86_i_cast_fu_1557_p3 when (tmp_339_fu_1564_p2(0) = '1') else 
        sel_tmp82_i_fu_1550_p3;
    sel_tmp97_i_cast_fu_1576_p3 <= 
        ap_const_lv3_3 when (sel_tmp24_i_fu_1468_p2(0) = '1') else 
        ap_const_lv3_2;
    the_assign_to_int_fu_1632_p1 <= ap_phi_reg_pp0_iter28_the_assign_reg_263;
    tmp3_fu_1219_p2 <= (tmp_324_reg_2136 or p_not_i_fu_1213_p2);
    tmp4_fu_1229_p2 <= (tmp_324_reg_2136 or tmp_316_reg_2130);
    tmp5_fu_1260_p2 <= (tmp_332_fu_1254_p2 or p_not4_i_fu_1239_p2);
    tmp5_not_fu_1334_p2 <= (tmp_331_fu_1250_p2 and tmp_302_fu_1168_p2);
    tmp6_fu_1282_p2 <= (tmp_332_fu_1254_p2 or tmp_328_fu_1245_p2);
    tmp7_fu_1419_p2 <= (tmp_338_fu_1414_p2 or p_not9_i_fu_1404_p2);
    tmp7_not_fu_1442_p2 <= (tmp_337_reg_2178 and tmp_306_reg_2165);
    tmp8_fu_1431_p2 <= (tmp_338_fu_1414_p2 or tmp_335_fu_1409_p2);
    tmp9_fu_1462_p2 <= (or_cond9_i_fu_1425_p2 and or_cond11_i_fu_1437_p2);
    tmp_149_fu_602_p2 <= "1" when (option = ap_const_lv32_0) else "0";
    tmp_152_mid2_v_fu_694_p3 <= 
        a_1_fu_674_p2 when (exitcond6_fu_680_p2(0) = '1') else 
        ap_phi_mux_a_phi_fu_245_p4;
    tmp_159_cast_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_mid2_reg_1801_pp0_iter15_reg),22));
    tmp_282_fu_623_p4 <= i_to_int_fu_619_p1(30 downto 23);
    tmp_283_fu_649_p2 <= (notrhs_fu_643_p2 or notlhs_fu_637_p2);
    tmp_285_fu_655_p2 <= (tmp_284_reg_1759 and tmp_283_fu_649_p2);
    tmp_287_fu_714_p4 <= j_1_to_int_fu_710_p1(30 downto 23);
    tmp_288_fu_740_p2 <= (notrhs1_fu_734_p2 or notlhs1_fu_728_p2);
    tmp_289_neg_fu_578_p2 <= (tmp_289_to_int_fu_574_p1 xor ap_const_lv32_80000000);
    tmp_289_to_int_fu_574_p1 <= grp_sin_or_cos_float_s_fu_336_ap_return;
    tmp_290_fu_746_p2 <= (tmp_289_reg_1768 and tmp_288_fu_740_p2);
    tmp_291_fu_888_p4 <= result_0_write_assi_fu_885_p1(30 downto 23);
    tmp_292_fu_914_p2 <= (notrhs2_fu_908_p2 or notlhs2_fu_902_p2);
    tmp_294_fu_920_p2 <= (tmp_293_reg_2080 and tmp_292_fu_914_p2);
    tmp_295_fu_1096_p4 <= result_0_write_assi_1_fu_1093_p1(30 downto 23);
    tmp_295_neg_fu_592_p2 <= (tmp_295_to_int_fu_588_p1 xor ap_const_lv32_80000000);
    tmp_295_to_int_fu_588_p1 <= grp_sin_or_cos_float_s_fu_366_ap_return;
    tmp_296_fu_1122_p2 <= (notrhs3_fu_1116_p2 or notlhs3_fu_1110_p2);
    tmp_298_fu_1128_p2 <= (tmp_297_reg_2070 and tmp_296_fu_1122_p2);
    tmp_299_fu_1136_p4 <= result_1_write_assi_fu_1133_p1(30 downto 23);
    tmp_300_fu_1162_p2 <= (notrhs4_fu_1156_p2 or notlhs4_fu_1150_p2);
    tmp_302_fu_1168_p2 <= (tmp_301_reg_2075 and tmp_300_fu_1162_p2);
    tmp_303_fu_1176_p4 <= result_2_write_assi_fu_1173_p1(30 downto 23);
    tmp_304_fu_1202_p2 <= (notrhs5_fu_1196_p2 or notlhs5_fu_1190_p2);
    tmp_306_fu_1208_p2 <= (tmp_305_reg_2045_pp0_iter17_reg and tmp_304_fu_1202_p2);
    tmp_307_fu_633_p1 <= i_to_int_fu_619_p1(23 - 1 downto 0);
    tmp_308_fu_940_p4 <= absX_i_to_int_fu_937_p1(30 downto 23);
    tmp_309_fu_957_p4 <= absY_i_to_int_fu_954_p1(30 downto 23);
    tmp_310_fu_983_p2 <= (notrhs6_fu_977_p2 or notlhs6_fu_971_p2);
    tmp_311_fu_1001_p2 <= (notrhs7_fu_995_p2 or notlhs7_fu_989_p2);
    tmp_312_fu_777_p1 <= i_to_int_mid1_fu_764_p1(23 - 1 downto 0);
    tmp_313_fu_1007_p2 <= (tmp_311_fu_1001_p2 and tmp_310_fu_983_p2);
    tmp_315_fu_1013_p2 <= (tmp_314_reg_2115 and tmp_313_fu_1007_p2);
    tmp_316_fu_1018_p2 <= (tmp_315_fu_1013_p2 xor ap_const_lv1_1);
    tmp_317_fu_724_p1 <= j_1_to_int_fu_710_p1(23 - 1 downto 0);
    tmp_318_fu_1027_p4 <= maxAxis_2_i_to_int_fu_1024_p1(30 downto 23);
    tmp_319_fu_898_p1 <= result_0_write_assi_fu_885_p1(23 - 1 downto 0);
    tmp_320_fu_1053_p2 <= (notrhs9_fu_1047_p2 or notlhs9_fu_1041_p2);
    tmp_321_fu_1059_p2 <= (tmp_320_fu_1053_p2 and tmp_310_fu_983_p2);
    tmp_323_fu_1065_p2 <= (tmp_322_reg_2120 and tmp_321_fu_1059_p2);
    tmp_324_fu_1070_p2 <= (tmp_323_fu_1065_p2 xor ap_const_lv1_1);
    tmp_326_fu_1076_p2 <= (tmp_325_reg_2125 and tmp_313_fu_1007_p2);
    tmp_327_fu_849_p1 <= p_Val2_s_fu_845_p1(63 - 1 downto 0);
    tmp_328_fu_1245_p2 <= (tmp_326_reg_2142 xor ap_const_lv1_1);
    tmp_329_fu_1081_p2 <= (tmp_320_fu_1053_p2 and tmp_311_fu_1001_p2);
    tmp_331_fu_1250_p2 <= (tmp_330_reg_2154 and tmp_329_reg_2148);
    tmp_332_fu_1254_p2 <= (tmp_331_fu_1250_p2 xor ap_const_lv1_1);
    tmp_334_fu_1087_p2 <= (tmp_321_fu_1059_p2 and grp_fu_482_p2);
    tmp_335_fu_1409_p2 <= (tmp_334_reg_2159 xor ap_const_lv1_1);
    tmp_337_fu_1304_p2 <= (tmp_329_reg_2148 and grp_fu_482_p2);
    tmp_338_fu_1414_p2 <= (tmp_337_reg_2178 xor ap_const_lv1_1);
    tmp_339_fu_1564_p2 <= (sel_tmp7_i_reg_2190 or sel_tmp12_i_reg_2196);
    tmp_340_fu_1584_p2 <= (sel_tmp24_i_fu_1468_p2 or sel_tmp18_i_fu_1451_p2);
    tmp_341_fu_1636_p4 <= the_assign_to_int_fu_1632_p1(30 downto 23);
    tmp_342_fu_1662_p2 <= (notrhs8_fu_1656_p2 or notlhs8_fu_1650_p2);
    tmp_344_fu_1668_p2 <= (tmp_342_fu_1662_p2 and grp_fu_470_p2);
    tmp_349_fu_881_p1 <= p_Val2_30_fu_877_p1(63 - 1 downto 0);
    tmp_353_fu_832_p1 <= p_Val2_31_fu_828_p1(63 - 1 downto 0);
    tmp_354_fu_1106_p1 <= result_0_write_assi_1_fu_1093_p1(23 - 1 downto 0);
    tmp_355_fu_1146_p1 <= result_1_write_assi_fu_1133_p1(23 - 1 downto 0);
    tmp_356_fu_1186_p1 <= result_2_write_assi_fu_1173_p1(23 - 1 downto 0);
    tmp_357_fu_950_p1 <= absX_i_to_int_fu_937_p1(23 - 1 downto 0);
    tmp_358_fu_967_p1 <= absY_i_to_int_fu_954_p1(23 - 1 downto 0);
    tmp_359_fu_1037_p1 <= maxAxis_2_i_to_int_fu_1024_p1(23 - 1 downto 0);
    tmp_360_fu_1646_p1 <= the_assign_to_int_fu_1632_p1(23 - 1 downto 0);
    tmp_361_fu_1679_p3 <= (tmp_59_reg_2050_pp0_iter35_reg & ap_const_lv1_0);
    tmp_515_mid1_fu_767_p4 <= i_to_int_mid1_fu_764_p1(30 downto 23);
    tmp_517_mid1_fu_793_p2 <= (notrhs_mid1_fu_787_p2 or notlhs_mid1_fu_781_p2);
    tmp_519_mid1_fu_799_p2 <= (tmp_518_mid1_reg_1828 and tmp_517_mid1_fu_793_p2);
    tmp_55_fu_817_p3 <= (tmp_152_mid2_v_reg_1807_pp0_iter15_reg & ap_const_lv10_0);
    tmp_56_cast_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_fu_817_p3),22));
    tmp_57_fu_1604_p2 <= "1" when (unsigned(index_assign_fu_1590_p3) < unsigned(ap_const_lv3_3)) else "0";
    tmp_58_fu_1610_p2 <= std_logic_vector(signed(ap_const_lv3_5) + signed(index_assign_fu_1590_p3));
    tmp_59_fu_839_p2 <= std_logic_vector(unsigned(tmp_159_cast_fu_836_p1) + unsigned(tmp_56_cast_fu_824_p1));
    tmp_61_fu_1686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_361_fu_1679_p3),64));
    tmp_62_cast_fu_1697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_1691_p2),64));
    tmp_62_fu_1691_p2 <= (tmp_361_fu_1679_p3 or ap_const_lv23_1);
    tmp_i_i1_fu_1598_p2 <= "1" when (unsigned(index_assign_fu_1590_p3) > unsigned(ap_const_lv3_2)) else "0";
    tmp_i_i2_cast_fu_1624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_i2_reg_2241),32));
    tmp_i_i2_fu_1616_p3 <= 
        index_assign_fu_1590_p3 when (tmp_57_fu_1604_p2(0) = '1') else 
        tmp_58_fu_1610_p2;
    uc_1_fu_1517_p3 <= 
        vc_3_reg_2017_pp0_iter17_reg when (sel_tmp18_i_fu_1451_p2(0) = '1') else 
        uc_fu_1513_p1;
    uc_fu_1513_p1 <= sel_tmp39_v_i_fu_1507_p2;
    vc_1_fu_1278_p1 <= vc_neg_i_fu_1272_p2;
    vc_1_neg_i_fu_1294_p2 <= (result_0_write_assi_1_fu_1093_p1 xor ap_const_lv32_80000000);
    vc_2_fu_1300_p1 <= vc_1_neg_i_fu_1294_p2;
    vc_4_fu_1389_p3 <= 
        vc_1_fu_1278_p1 when (sel_tmp3_i_fu_1321_p2(0) = '1') else 
        vc_reg_2029_pp0_iter17_reg;
    vc_5_fu_1396_p3 <= 
        vc_2_fu_1300_p1 when (sel_tmp7_i_fu_1345_p2(0) = '1') else 
        vc_4_fu_1389_p3;
    vc_6_fu_1524_p3 <= 
        vc_3_reg_2017_pp0_iter17_reg when (sel_tmp12_i_reg_2196(0) = '1') else 
        vc_5_reg_2215;
    vc_7_fu_1529_p3 <= 
        vc_reg_2029_pp0_iter17_reg when (sel_tmp18_i_fu_1451_p2(0) = '1') else 
        vc_6_fu_1524_p3;
    vc_8_fu_1536_p3 <= 
        vc_reg_2029_pp0_iter17_reg when (sel_tmp24_i_fu_1468_p2(0) = '1') else 
        vc_7_fu_1529_p3;
    vc_neg_i_fu_1272_p2 <= (result_1_write_assi_fu_1133_p1 xor ap_const_lv32_80000000);
    vertical_i_i_fu_1628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_i1_reg_2236),32));
end behav;
