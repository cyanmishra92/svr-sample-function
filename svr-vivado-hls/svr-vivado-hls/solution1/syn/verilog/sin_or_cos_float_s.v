// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sin_or_cos_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        t_in,
        do_cos,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    ap_const_lv32_0 = 32'd0;


input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [31:0] t_in;
input   do_cos;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
reg    ap_block_pp0_stage0_11001;
wire   [3:0] ref_4oPi_table_100_V_address0;
reg    ref_4oPi_table_100_V_ce0;
wire   [99:0] ref_4oPi_table_100_V_q0;
wire   [7:0] second_order_float_2_address0;
reg    second_order_float_2_ce0;
wire   [29:0] second_order_float_2_q0;
wire   [7:0] second_order_float_3_address0;
reg    second_order_float_3_ce0;
wire   [22:0] second_order_float_3_q0;
wire   [7:0] second_order_float_s_address0;
reg    second_order_float_s_ce0;
wire   [14:0] second_order_float_s_q0;
reg   [0:0] do_cos_read_reg_1171;
reg   [0:0] do_cos_read_reg_1171_pp0_iter1_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter2_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter3_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter4_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter5_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter6_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter7_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter8_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter9_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter10_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter11_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter12_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter13_reg;
reg   [0:0] do_cos_read_reg_1171_pp0_iter14_reg;
reg   [0:0] p_Result_19_reg_1178;
reg   [0:0] p_Result_19_reg_1178_pp0_iter1_reg;
reg   [0:0] p_Result_19_reg_1178_pp0_iter2_reg;
reg   [0:0] p_Result_19_reg_1178_pp0_iter3_reg;
reg   [0:0] p_Result_19_reg_1178_pp0_iter4_reg;
reg   [0:0] p_Result_19_reg_1178_pp0_iter5_reg;
reg   [0:0] p_Result_19_reg_1178_pp0_iter6_reg;
reg   [0:0] p_Result_19_reg_1178_pp0_iter7_reg;
reg   [0:0] p_Result_19_reg_1178_pp0_iter8_reg;
wire   [7:0] loc_V_fu_262_p4;
reg   [7:0] loc_V_reg_1184;
reg   [7:0] loc_V_reg_1184_pp0_iter1_reg;
reg   [7:0] loc_V_reg_1184_pp0_iter2_reg;
reg   [7:0] loc_V_reg_1184_pp0_iter3_reg;
reg   [7:0] loc_V_reg_1184_pp0_iter4_reg;
reg   [7:0] loc_V_reg_1184_pp0_iter5_reg;
reg   [7:0] loc_V_reg_1184_pp0_iter6_reg;
reg   [7:0] loc_V_reg_1184_pp0_iter7_reg;
wire   [22:0] loc_V_1_fu_272_p1;
reg   [22:0] loc_V_1_reg_1191;
reg   [22:0] loc_V_1_reg_1191_pp0_iter1_reg;
wire   [0:0] closepath_fu_276_p2;
reg   [0:0] closepath_reg_1197;
reg   [0:0] closepath_reg_1197_pp0_iter1_reg;
reg   [0:0] closepath_reg_1197_pp0_iter2_reg;
reg   [0:0] closepath_reg_1197_pp0_iter3_reg;
reg   [0:0] closepath_reg_1197_pp0_iter4_reg;
reg   [0:0] closepath_reg_1197_pp0_iter5_reg;
reg   [0:0] closepath_reg_1197_pp0_iter6_reg;
reg   [0:0] closepath_reg_1197_pp0_iter7_reg;
wire   [3:0] tmp_15_fu_311_p1;
reg   [3:0] tmp_15_reg_1208;
reg   [79:0] Med_V_reg_1213;
wire   [0:0] tmp_6_fu_354_p2;
reg   [0:0] tmp_6_reg_1228;
reg   [0:0] tmp_6_reg_1228_pp0_iter3_reg;
reg   [0:0] tmp_6_reg_1228_pp0_iter4_reg;
reg   [0:0] tmp_6_reg_1228_pp0_iter5_reg;
reg   [0:0] tmp_6_reg_1228_pp0_iter6_reg;
reg   [0:0] tmp_6_reg_1228_pp0_iter7_reg;
reg   [0:0] tmp_6_reg_1228_pp0_iter8_reg;
reg   [0:0] tmp_6_reg_1228_pp0_iter9_reg;
reg   [0:0] tmp_6_reg_1228_pp0_iter10_reg;
reg   [0:0] tmp_6_reg_1228_pp0_iter11_reg;
reg   [0:0] tmp_6_reg_1228_pp0_iter12_reg;
reg   [0:0] tmp_6_reg_1228_pp0_iter13_reg;
reg   [0:0] tmp_6_reg_1228_pp0_iter14_reg;
reg   [57:0] p_Val2_6_reg_1234;
reg   [2:0] tmp_14_i_reg_1240;
wire   [2:0] p_Val2_24_fu_379_p3;
reg   [2:0] p_Val2_24_reg_1245;
reg   [2:0] p_Val2_24_reg_1245_pp0_iter8_reg;
wire   [57:0] p_Val2_8_fu_394_p3;
reg   [57:0] p_Val2_8_reg_1251;
wire   [4:0] Mx_zeros_V_fu_445_p1;
reg   [4:0] Mx_zeros_V_reg_1256;
reg   [28:0] Mx_V_reg_1262;
reg   [28:0] Mx_V_reg_1262_pp0_iter9_reg;
reg   [28:0] Mx_V_reg_1262_pp0_iter10_reg;
reg   [28:0] Mx_V_reg_1262_pp0_iter11_reg;
wire  signed [7:0] Ex_V_fu_482_p2;
reg  signed [7:0] Ex_V_reg_1269;
reg  signed [7:0] Ex_V_reg_1269_pp0_iter9_reg;
reg  signed [7:0] Ex_V_reg_1269_pp0_iter10_reg;
reg  signed [7:0] Ex_V_reg_1269_pp0_iter11_reg;
reg  signed [7:0] Ex_V_reg_1269_pp0_iter12_reg;
reg  signed [7:0] Ex_V_reg_1269_pp0_iter13_reg;
wire   [0:0] isNeg_fu_492_p3;
reg   [0:0] isNeg_reg_1274;
wire  signed [8:0] sh_assign_fu_506_p3;
reg  signed [8:0] sh_assign_reg_1279;
wire   [0:0] tmp_5_fu_514_p2;
reg   [0:0] tmp_5_reg_1285;
reg   [0:0] tmp_5_reg_1285_pp0_iter9_reg;
reg   [0:0] tmp_5_reg_1285_pp0_iter10_reg;
reg   [0:0] tmp_5_reg_1285_pp0_iter11_reg;
reg   [0:0] tmp_5_reg_1285_pp0_iter12_reg;
reg   [0:0] tmp_5_reg_1285_pp0_iter13_reg;
reg   [0:0] tmp_5_reg_1285_pp0_iter14_reg;
wire   [0:0] tmp_7_fu_519_p2;
reg   [0:0] tmp_7_reg_1291;
reg   [0:0] tmp_7_reg_1291_pp0_iter9_reg;
reg   [0:0] tmp_7_reg_1291_pp0_iter10_reg;
reg   [0:0] tmp_7_reg_1291_pp0_iter11_reg;
reg   [0:0] tmp_7_reg_1291_pp0_iter12_reg;
reg   [0:0] tmp_7_reg_1291_pp0_iter13_reg;
reg   [0:0] tmp_7_reg_1291_pp0_iter14_reg;
wire   [0:0] cos_basis_fu_582_p3;
reg   [0:0] cos_basis_reg_1299;
reg   [0:0] cos_basis_reg_1299_pp0_iter10_reg;
reg   [0:0] cos_basis_reg_1299_pp0_iter11_reg;
reg   [0:0] cos_basis_reg_1299_pp0_iter12_reg;
reg   [0:0] cos_basis_reg_1299_pp0_iter13_reg;
wire   [21:0] p_Val2_12_fu_599_p1;
reg   [21:0] p_Val2_12_reg_1305;
reg   [21:0] p_Val2_12_reg_1305_pp0_iter10_reg;
reg   [14:0] tmp_i1_reg_1310;
wire   [0:0] or_cond_42_fu_729_p2;
reg   [0:0] or_cond_42_reg_1330;
reg   [0:0] or_cond_42_reg_1330_pp0_iter10_reg;
reg   [0:0] or_cond_42_reg_1330_pp0_iter11_reg;
reg   [0:0] or_cond_42_reg_1330_pp0_iter12_reg;
reg   [0:0] or_cond_42_reg_1330_pp0_iter13_reg;
reg   [0:0] or_cond_42_reg_1330_pp0_iter14_reg;
wire   [0:0] p_Result_s_45_fu_749_p3;
reg   [0:0] p_Result_s_45_reg_1336;
reg   [0:0] p_Result_s_45_reg_1336_pp0_iter10_reg;
reg   [0:0] p_Result_s_45_reg_1336_pp0_iter11_reg;
reg   [0:0] p_Result_s_45_reg_1336_pp0_iter12_reg;
reg   [0:0] p_Result_s_45_reg_1336_pp0_iter13_reg;
reg   [0:0] p_Result_s_45_reg_1336_pp0_iter14_reg;
reg   [14:0] tmp_35_i_reg_1341;
reg   [28:0] p_Val2_15_reg_1346;
reg   [28:0] p_Val2_15_reg_1346_pp0_iter11_reg;
reg   [22:0] second_order_float_6_reg_1351;
reg  signed [14:0] second_order_float_8_reg_1356;
reg   [21:0] tmp_28_i_reg_1361;
reg   [13:0] tmp_30_i_reg_1366;
wire   [28:0] Mx_V_read_assign_fu_816_p3;
reg   [28:0] Mx_V_read_assign_reg_1371;
wire   [29:0] r_V_fu_837_p2;
reg   [29:0] r_V_reg_1376;
reg   [28:0] result_V_reg_1381;
reg   [15:0] p_Result_20_i_reg_1387;
reg   [12:0] p_Result_i1_reg_1392;
reg   [31:0] tmp_i14_i_fu_961_p3;
reg   [31:0] tmp_i14_i_reg_1397;
wire   [31:0] tmp_32_i_fu_972_p2;
reg   [31:0] tmp_32_i_reg_1402;
wire   [0:0] tmp_33_i_fu_978_p2;
reg   [0:0] tmp_33_i_reg_1408;
wire   [31:0] newexp_fu_1008_p2;
reg   [31:0] newexp_reg_1413;
reg   [0:0] tmp_21_reg_1418;
wire   [0:0] tmp_12_i_fu_1022_p2;
reg   [0:0] tmp_12_i_reg_1423;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_i2_i_fu_306_p1;
wire   [63:0] tmp_36_i_fu_632_p1;
wire   [31:0] p_Val2_s_fu_250_p1;
wire   [7:0] expv_op_fu_282_p2;
wire   [7:0] addr_V_fu_288_p3;
wire   [3:0] tmp_1_fu_296_p4;
wire   [99:0] tmp_1_i_i_fu_315_p1;
wire   [99:0] r_V_3_fu_318_p2;
wire   [23:0] p_Result_20_fu_334_p3;
wire   [79:0] grp_fu_348_p0;
wire   [23:0] grp_fu_348_p1;
wire   [103:0] grp_fu_348_p2;
wire   [0:0] tmp_16_fu_385_p1;
wire   [57:0] p_Val2_i_fu_389_p2;
wire   [28:0] p_Result_i3_i_fu_401_p4;
wire   [29:0] p_Result_21_fu_411_p3;
reg   [29:0] p_Result_22_fu_419_p4;
wire   [31:0] p_Result_23_fu_429_p3;
reg   [31:0] val_assign_fu_437_p3;
wire   [7:0] p_i_fu_449_p2;
wire   [57:0] tmp_15_i_fu_461_p1;
wire   [57:0] p_Val2_11_fu_464_p2;
wire   [7:0] storemerge_i_fu_454_p3;
wire   [7:0] tmp_18_i_fu_479_p1;
wire  signed [8:0] sh_cast_fu_488_p1;
wire   [8:0] tmp_20_i_fu_500_p2;
wire  signed [28:0] sh_assign_1_cast_fu_527_p1;
wire   [28:0] tmp_22_i_fu_533_p2;
wire   [31:0] tmp_21_i_fu_530_p1;
wire  signed [31:0] sh_assign_1_cast5_fu_524_p1;
wire   [31:0] tmp_22_i_cast_fu_538_p1;
wire   [31:0] tmp_23_i_fu_542_p2;
wire   [0:0] tmp_fu_555_p10;
wire   [0:0] tmp_s_fu_576_p2;
wire   [31:0] ssdm_int_V_write_ass_fu_548_p3;
wire   [0:0] not_do_cos_i_fu_613_p2;
wire   [0:0] sin_basis_fu_618_p2;
wire   [6:0] p_Result_i_fu_589_p4;
wire   [7:0] p_Result_24_fu_624_p3;
wire   [3:0] p_Result_28_fu_639_p3;
wire   [0:0] tmp_2_fu_645_p18;
wire   [0:0] tmp_3_fu_683_p18;
wire   [0:0] tmp_4_fu_721_p3;
wire   [0:0] tmp_8_fu_738_p2;
wire   [0:0] p_Result_s_fu_733_p2;
wire   [0:0] p_Result_s_43_fu_743_p2;
wire   [29:0] p_Val2_13_fu_1157_p2;
wire  signed [22:0] p_Val2_1_fu_785_p0;
wire   [21:0] p_Val2_1_fu_785_p1;
wire   [44:0] p_Val2_1_fu_785_p2;
wire  signed [29:0] p_Val2_5_fu_1164_p2;
wire  signed [29:0] tmp_38_i_fu_822_p1;
wire  signed [29:0] tmp_39_i_fu_825_p1;
wire   [29:0] p_Val2_16_fu_828_p2;
wire  signed [29:0] tmp_41_i_cast_fu_834_p1;
wire  signed [29:0] p_Val2_17_fu_849_p0;
wire   [28:0] p_Val2_17_fu_849_p1;
wire   [58:0] p_Val2_17_fu_849_p2;
wire   [7:0] p_Ex_V_ret_fu_885_p3;
wire   [16:0] tmp_i1_41_fu_895_p3;
wire   [13:0] tmp_15_i1_fu_914_p3;
wire   [31:0] p_Val2_19_fu_902_p5;
reg   [31:0] p_Result_26_fu_933_p4;
wire   [31:0] p_Result_25_fu_921_p5;
reg   [31:0] p_Result_27_fu_951_p4;
wire   [31:0] tmp_29_i1_fu_969_p1;
reg   [31:0] tmp_i_i1_fu_943_p3;
wire   [31:0] shift_2_1_i_fu_984_p2;
wire  signed [8:0] rhs_V_fu_891_p1;
wire   [8:0] tmp_i2_fu_998_p2;
wire  signed [31:0] tmp_i2_cast_fu_1004_p1;
wire   [31:0] shift_1_i_fu_990_p3;
wire   [28:0] tmp_20_fu_1027_p1;
wire   [31:0] tmp_29_1_i_fu_1030_p1;
wire   [31:0] tmp_32_1_i_fu_1034_p2;
wire   [22:0] tmp_10_fu_1046_p4;
wire   [22:0] tmp_11_fu_1056_p4;
wire   [0:0] or_cond_i_fu_1039_p2;
wire   [0:0] tmp_9_fu_1086_p2;
wire   [7:0] out_exp_V_fu_1079_p3;
wire   [7:0] tmp_22_fu_1043_p1;
wire   [7:0] p_cast_cast_fu_1072_p3;
wire   [7:0] p_Result_s_44_fu_1091_p3;
wire   [0:0] not_or_cond_demorgan_fu_1106_p2;
wire   [0:0] not_or_cond_fu_1110_p2;
wire   [22:0] tmp_12_fu_1065_p3;
wire   [0:0] or_cond_fu_1124_p2;
wire   [22:0] newSel_cast_fu_1116_p3;
wire   [22:0] newSel1_fu_1128_p3;
wire   [7:0] ret_V_3_fu_1099_p3;
wire   [22:0] ret_V_4_fu_1136_p3;
wire   [31:0] p_Result_29_fu_1144_p4;
wire   [14:0] p_Val2_13_fu_1157_p0;
wire   [29:0] OP1_V_3_fu_757_p1;
wire   [14:0] p_Val2_13_fu_1157_p1;
wire   [14:0] p_Val2_5_fu_1164_p1;
reg    grp_fu_348_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to14;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [103:0] grp_fu_348_p00;
wire   [103:0] grp_fu_348_p10;
wire   [58:0] p_Val2_17_fu_849_p10;
wire   [44:0] p_Val2_1_fu_785_p10;
wire   [29:0] p_Val2_5_fu_1164_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
end

sin_or_cos_float_bkb #(
    .DataWidth( 100 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
ref_4oPi_table_100_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_100_V_address0),
    .ce0(ref_4oPi_table_100_V_ce0),
    .q0(ref_4oPi_table_100_V_q0)
);

sin_or_cos_float_cud #(
    .DataWidth( 30 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_2_address0),
    .ce0(second_order_float_2_ce0),
    .q0(second_order_float_2_q0)
);

sin_or_cos_float_dEe #(
    .DataWidth( 23 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_3_address0),
    .ce0(second_order_float_3_ce0),
    .q0(second_order_float_3_q0)
);

sin_or_cos_float_eOg #(
    .DataWidth( 15 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_s_address0),
    .ce0(second_order_float_s_ce0),
    .q0(second_order_float_s_q0)
);

convert_mul_80ns_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 80 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 104 ))
convert_mul_80ns_fYi_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_348_p0),
    .din1(grp_fu_348_p1),
    .ce(grp_fu_348_ce),
    .dout(grp_fu_348_p2)
);

convert_mux_83_1_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
convert_mux_83_1_g8j_U2(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(p_Val2_24_reg_1245_pp0_iter8_reg),
    .dout(tmp_fu_555_p10)
);

convert_mux_164_1hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
convert_mux_164_1hbi_U3(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_28_fu_639_p3),
    .dout(tmp_2_fu_645_p18)
);

convert_mux_164_1hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
convert_mux_164_1hbi_U4(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_28_fu_639_p3),
    .dout(tmp_3_fu_683_p18)
);

convert_mul_mul_1ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
convert_mul_mul_1ibs_U5(
    .din0(p_Val2_13_fu_1157_p0),
    .din1(p_Val2_13_fu_1157_p1),
    .dout(p_Val2_13_fu_1157_p2)
);

convert_mul_mul_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
convert_mul_mul_1jbC_U6(
    .din0(second_order_float_8_reg_1356),
    .din1(p_Val2_5_fu_1164_p1),
    .dout(p_Val2_5_fu_1164_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        Ex_V_reg_1269 <= Ex_V_fu_482_p2;
        Ex_V_reg_1269_pp0_iter10_reg <= Ex_V_reg_1269_pp0_iter9_reg;
        Ex_V_reg_1269_pp0_iter11_reg <= Ex_V_reg_1269_pp0_iter10_reg;
        Ex_V_reg_1269_pp0_iter12_reg <= Ex_V_reg_1269_pp0_iter11_reg;
        Ex_V_reg_1269_pp0_iter13_reg <= Ex_V_reg_1269_pp0_iter12_reg;
        Ex_V_reg_1269_pp0_iter9_reg <= Ex_V_reg_1269;
        Mx_V_read_assign_reg_1371 <= Mx_V_read_assign_fu_816_p3;
        Mx_V_reg_1262 <= {{p_Val2_11_fu_464_p2[57:29]}};
        Mx_V_reg_1262_pp0_iter10_reg <= Mx_V_reg_1262_pp0_iter9_reg;
        Mx_V_reg_1262_pp0_iter11_reg <= Mx_V_reg_1262_pp0_iter10_reg;
        Mx_V_reg_1262_pp0_iter9_reg <= Mx_V_reg_1262;
        Mx_zeros_V_reg_1256 <= Mx_zeros_V_fu_445_p1;
        closepath_reg_1197_pp0_iter2_reg <= closepath_reg_1197_pp0_iter1_reg;
        closepath_reg_1197_pp0_iter3_reg <= closepath_reg_1197_pp0_iter2_reg;
        closepath_reg_1197_pp0_iter4_reg <= closepath_reg_1197_pp0_iter3_reg;
        closepath_reg_1197_pp0_iter5_reg <= closepath_reg_1197_pp0_iter4_reg;
        closepath_reg_1197_pp0_iter6_reg <= closepath_reg_1197_pp0_iter5_reg;
        closepath_reg_1197_pp0_iter7_reg <= closepath_reg_1197_pp0_iter6_reg;
        cos_basis_reg_1299 <= cos_basis_fu_582_p3;
        cos_basis_reg_1299_pp0_iter10_reg <= cos_basis_reg_1299;
        cos_basis_reg_1299_pp0_iter11_reg <= cos_basis_reg_1299_pp0_iter10_reg;
        cos_basis_reg_1299_pp0_iter12_reg <= cos_basis_reg_1299_pp0_iter11_reg;
        cos_basis_reg_1299_pp0_iter13_reg <= cos_basis_reg_1299_pp0_iter12_reg;
        do_cos_read_reg_1171_pp0_iter10_reg <= do_cos_read_reg_1171_pp0_iter9_reg;
        do_cos_read_reg_1171_pp0_iter11_reg <= do_cos_read_reg_1171_pp0_iter10_reg;
        do_cos_read_reg_1171_pp0_iter12_reg <= do_cos_read_reg_1171_pp0_iter11_reg;
        do_cos_read_reg_1171_pp0_iter13_reg <= do_cos_read_reg_1171_pp0_iter12_reg;
        do_cos_read_reg_1171_pp0_iter14_reg <= do_cos_read_reg_1171_pp0_iter13_reg;
        do_cos_read_reg_1171_pp0_iter2_reg <= do_cos_read_reg_1171_pp0_iter1_reg;
        do_cos_read_reg_1171_pp0_iter3_reg <= do_cos_read_reg_1171_pp0_iter2_reg;
        do_cos_read_reg_1171_pp0_iter4_reg <= do_cos_read_reg_1171_pp0_iter3_reg;
        do_cos_read_reg_1171_pp0_iter5_reg <= do_cos_read_reg_1171_pp0_iter4_reg;
        do_cos_read_reg_1171_pp0_iter6_reg <= do_cos_read_reg_1171_pp0_iter5_reg;
        do_cos_read_reg_1171_pp0_iter7_reg <= do_cos_read_reg_1171_pp0_iter6_reg;
        do_cos_read_reg_1171_pp0_iter8_reg <= do_cos_read_reg_1171_pp0_iter7_reg;
        do_cos_read_reg_1171_pp0_iter9_reg <= do_cos_read_reg_1171_pp0_iter8_reg;
        isNeg_reg_1274 <= Ex_V_fu_482_p2[32'd7];
        loc_V_reg_1184_pp0_iter2_reg <= loc_V_reg_1184_pp0_iter1_reg;
        loc_V_reg_1184_pp0_iter3_reg <= loc_V_reg_1184_pp0_iter2_reg;
        loc_V_reg_1184_pp0_iter4_reg <= loc_V_reg_1184_pp0_iter3_reg;
        loc_V_reg_1184_pp0_iter5_reg <= loc_V_reg_1184_pp0_iter4_reg;
        loc_V_reg_1184_pp0_iter6_reg <= loc_V_reg_1184_pp0_iter5_reg;
        loc_V_reg_1184_pp0_iter7_reg <= loc_V_reg_1184_pp0_iter6_reg;
        newexp_reg_1413 <= newexp_fu_1008_p2;
        or_cond_42_reg_1330 <= or_cond_42_fu_729_p2;
        or_cond_42_reg_1330_pp0_iter10_reg <= or_cond_42_reg_1330;
        or_cond_42_reg_1330_pp0_iter11_reg <= or_cond_42_reg_1330_pp0_iter10_reg;
        or_cond_42_reg_1330_pp0_iter12_reg <= or_cond_42_reg_1330_pp0_iter11_reg;
        or_cond_42_reg_1330_pp0_iter13_reg <= or_cond_42_reg_1330_pp0_iter12_reg;
        or_cond_42_reg_1330_pp0_iter14_reg <= or_cond_42_reg_1330_pp0_iter13_reg;
        p_Result_19_reg_1178_pp0_iter2_reg <= p_Result_19_reg_1178_pp0_iter1_reg;
        p_Result_19_reg_1178_pp0_iter3_reg <= p_Result_19_reg_1178_pp0_iter2_reg;
        p_Result_19_reg_1178_pp0_iter4_reg <= p_Result_19_reg_1178_pp0_iter3_reg;
        p_Result_19_reg_1178_pp0_iter5_reg <= p_Result_19_reg_1178_pp0_iter4_reg;
        p_Result_19_reg_1178_pp0_iter6_reg <= p_Result_19_reg_1178_pp0_iter5_reg;
        p_Result_19_reg_1178_pp0_iter7_reg <= p_Result_19_reg_1178_pp0_iter6_reg;
        p_Result_19_reg_1178_pp0_iter8_reg <= p_Result_19_reg_1178_pp0_iter7_reg;
        p_Result_20_i_reg_1387 <= {{p_Val2_17_fu_849_p2[57:42]}};
        p_Result_i1_reg_1392 <= {{p_Val2_17_fu_849_p2[41:29]}};
        p_Result_s_45_reg_1336 <= p_Result_s_45_fu_749_p3;
        p_Result_s_45_reg_1336_pp0_iter10_reg <= p_Result_s_45_reg_1336;
        p_Result_s_45_reg_1336_pp0_iter11_reg <= p_Result_s_45_reg_1336_pp0_iter10_reg;
        p_Result_s_45_reg_1336_pp0_iter12_reg <= p_Result_s_45_reg_1336_pp0_iter11_reg;
        p_Result_s_45_reg_1336_pp0_iter13_reg <= p_Result_s_45_reg_1336_pp0_iter12_reg;
        p_Result_s_45_reg_1336_pp0_iter14_reg <= p_Result_s_45_reg_1336_pp0_iter13_reg;
        p_Val2_12_reg_1305 <= p_Val2_12_fu_599_p1;
        p_Val2_12_reg_1305_pp0_iter10_reg <= p_Val2_12_reg_1305;
        p_Val2_15_reg_1346 <= {{second_order_float_2_q0[29:1]}};
        p_Val2_15_reg_1346_pp0_iter11_reg <= p_Val2_15_reg_1346;
        p_Val2_24_reg_1245 <= p_Val2_24_fu_379_p3;
        p_Val2_24_reg_1245_pp0_iter8_reg <= p_Val2_24_reg_1245;
        p_Val2_6_reg_1234 <= {{grp_fu_348_p2[76:19]}};
        p_Val2_8_reg_1251 <= p_Val2_8_fu_394_p3;
        r_V_reg_1376 <= r_V_fu_837_p2;
        result_V_reg_1381 <= {{p_Val2_17_fu_849_p2[57:29]}};
        second_order_float_6_reg_1351 <= second_order_float_3_q0;
        second_order_float_8_reg_1356 <= second_order_float_s_q0;
        sh_assign_reg_1279 <= sh_assign_fu_506_p3;
        tmp_12_i_reg_1423 <= tmp_12_i_fu_1022_p2;
        tmp_21_reg_1418 <= newexp_fu_1008_p2[32'd31];
        tmp_28_i_reg_1361 <= {{p_Val2_1_fu_785_p2[44:23]}};
        tmp_30_i_reg_1366 <= {{p_Val2_5_fu_1164_p2[29:16]}};
        tmp_32_i_reg_1402 <= tmp_32_i_fu_972_p2;
        tmp_33_i_reg_1408 <= tmp_33_i_fu_978_p2;
        tmp_35_i_reg_1341 <= {{p_Val2_13_fu_1157_p2[29:15]}};
        tmp_5_reg_1285 <= tmp_5_fu_514_p2;
        tmp_5_reg_1285_pp0_iter10_reg <= tmp_5_reg_1285_pp0_iter9_reg;
        tmp_5_reg_1285_pp0_iter11_reg <= tmp_5_reg_1285_pp0_iter10_reg;
        tmp_5_reg_1285_pp0_iter12_reg <= tmp_5_reg_1285_pp0_iter11_reg;
        tmp_5_reg_1285_pp0_iter13_reg <= tmp_5_reg_1285_pp0_iter12_reg;
        tmp_5_reg_1285_pp0_iter14_reg <= tmp_5_reg_1285_pp0_iter13_reg;
        tmp_5_reg_1285_pp0_iter9_reg <= tmp_5_reg_1285;
        tmp_6_reg_1228 <= tmp_6_fu_354_p2;
        tmp_6_reg_1228_pp0_iter10_reg <= tmp_6_reg_1228_pp0_iter9_reg;
        tmp_6_reg_1228_pp0_iter11_reg <= tmp_6_reg_1228_pp0_iter10_reg;
        tmp_6_reg_1228_pp0_iter12_reg <= tmp_6_reg_1228_pp0_iter11_reg;
        tmp_6_reg_1228_pp0_iter13_reg <= tmp_6_reg_1228_pp0_iter12_reg;
        tmp_6_reg_1228_pp0_iter14_reg <= tmp_6_reg_1228_pp0_iter13_reg;
        tmp_6_reg_1228_pp0_iter3_reg <= tmp_6_reg_1228;
        tmp_6_reg_1228_pp0_iter4_reg <= tmp_6_reg_1228_pp0_iter3_reg;
        tmp_6_reg_1228_pp0_iter5_reg <= tmp_6_reg_1228_pp0_iter4_reg;
        tmp_6_reg_1228_pp0_iter6_reg <= tmp_6_reg_1228_pp0_iter5_reg;
        tmp_6_reg_1228_pp0_iter7_reg <= tmp_6_reg_1228_pp0_iter6_reg;
        tmp_6_reg_1228_pp0_iter8_reg <= tmp_6_reg_1228_pp0_iter7_reg;
        tmp_6_reg_1228_pp0_iter9_reg <= tmp_6_reg_1228_pp0_iter8_reg;
        tmp_7_reg_1291 <= tmp_7_fu_519_p2;
        tmp_7_reg_1291_pp0_iter10_reg <= tmp_7_reg_1291_pp0_iter9_reg;
        tmp_7_reg_1291_pp0_iter11_reg <= tmp_7_reg_1291_pp0_iter10_reg;
        tmp_7_reg_1291_pp0_iter12_reg <= tmp_7_reg_1291_pp0_iter11_reg;
        tmp_7_reg_1291_pp0_iter13_reg <= tmp_7_reg_1291_pp0_iter12_reg;
        tmp_7_reg_1291_pp0_iter14_reg <= tmp_7_reg_1291_pp0_iter13_reg;
        tmp_7_reg_1291_pp0_iter9_reg <= tmp_7_reg_1291;
        tmp_i14_i_reg_1397 <= tmp_i14_i_fu_961_p3;
        tmp_i1_reg_1310 <= {{ssdm_int_V_write_ass_fu_548_p3[21:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        Med_V_reg_1213 <= {{r_V_3_fu_318_p2[99:20]}};
        closepath_reg_1197 <= closepath_fu_276_p2;
        closepath_reg_1197_pp0_iter1_reg <= closepath_reg_1197;
        do_cos_read_reg_1171 <= do_cos;
        do_cos_read_reg_1171_pp0_iter1_reg <= do_cos_read_reg_1171;
        loc_V_1_reg_1191 <= loc_V_1_fu_272_p1;
        loc_V_1_reg_1191_pp0_iter1_reg <= loc_V_1_reg_1191;
        loc_V_reg_1184 <= {{p_Val2_s_fu_250_p1[30:23]}};
        loc_V_reg_1184_pp0_iter1_reg <= loc_V_reg_1184;
        p_Result_19_reg_1178 <= p_Val2_s_fu_250_p1[32'd31];
        p_Result_19_reg_1178_pp0_iter1_reg <= p_Result_19_reg_1178;
        tmp_15_reg_1208 <= tmp_15_fu_311_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (closepath_reg_1197_pp0_iter5_reg == 1'd0) & (1'b1 == ap_ce))) begin
        tmp_14_i_reg_1240 <= {{grp_fu_348_p2[79:77]}};
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_ce)) | ((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to14 = 1'b1;
    end else begin
        ap_idle_pp0_0to14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        grp_fu_348_ce = 1'b1;
    end else begin
        grp_fu_348_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        ref_4oPi_table_100_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_100_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_ce))) begin
        second_order_float_2_ce0 = 1'b1;
    end else begin
        second_order_float_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_ce))) begin
        second_order_float_3_ce0 = 1'b1;
    end else begin
        second_order_float_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_ce))) begin
        second_order_float_s_ce0 = 1'b1;
    end else begin
        second_order_float_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ex_V_fu_482_p2 = (storemerge_i_fu_454_p3 - tmp_18_i_fu_479_p1);

assign Mx_V_read_assign_fu_816_p3 = ((cos_basis_reg_1299_pp0_iter11_reg[0:0] === 1'b1) ? 29'd536870911 : Mx_V_reg_1262_pp0_iter11_reg);

assign Mx_zeros_V_fu_445_p1 = val_assign_fu_437_p3[4:0];

assign OP1_V_3_fu_757_p1 = tmp_i1_reg_1310;

assign addr_V_fu_288_p3 = ((closepath_fu_276_p2[0:0] === 1'b1) ? 8'd63 : expv_op_fu_282_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = p_Result_29_fu_1144_p4;

assign closepath_fu_276_p2 = ((loc_V_fu_262_p4 < 8'd126) ? 1'b1 : 1'b0);

assign cos_basis_fu_582_p3 = ((do_cos_read_reg_1171_pp0_iter8_reg[0:0] === 1'b1) ? tmp_s_fu_576_p2 : tmp_fu_555_p10);

assign expv_op_fu_282_p2 = ($signed(8'd194) + $signed(loc_V_fu_262_p4));

assign grp_fu_348_p0 = grp_fu_348_p00;

assign grp_fu_348_p00 = Med_V_reg_1213;

assign grp_fu_348_p1 = grp_fu_348_p10;

assign grp_fu_348_p10 = p_Result_20_fu_334_p3;

assign isNeg_fu_492_p3 = Ex_V_fu_482_p2[32'd7];

assign loc_V_1_fu_272_p1 = p_Val2_s_fu_250_p1[22:0];

assign loc_V_fu_262_p4 = {{p_Val2_s_fu_250_p1[30:23]}};

assign newSel1_fu_1128_p3 = ((or_cond_i_fu_1039_p2[0:0] === 1'b1) ? 23'd0 : tmp_12_fu_1065_p3);

assign newSel_cast_fu_1116_p3 = ((not_or_cond_fu_1110_p2[0:0] === 1'b1) ? 23'd8388607 : 23'd0);

assign newexp_fu_1008_p2 = ($signed(tmp_i2_cast_fu_1004_p1) - $signed(shift_1_i_fu_990_p3));

assign not_do_cos_i_fu_613_p2 = (do_cos_read_reg_1171_pp0_iter8_reg ^ 1'd1);

assign not_or_cond_demorgan_fu_1106_p2 = (tmp_6_reg_1228_pp0_iter14_reg & tmp_5_reg_1285_pp0_iter14_reg);

assign not_or_cond_fu_1110_p2 = (not_or_cond_demorgan_fu_1106_p2 ^ 1'd1);

assign or_cond_42_fu_729_p2 = (tmp_6_reg_1228_pp0_iter8_reg & tmp_5_reg_1285);

assign or_cond_fu_1124_p2 = (tmp_7_reg_1291_pp0_iter14_reg | or_cond_42_reg_1330_pp0_iter14_reg);

assign or_cond_i_fu_1039_p2 = (tmp_21_reg_1418 | tmp_12_i_reg_1423);

assign out_exp_V_fu_1079_p3 = ((tmp_7_reg_1291_pp0_iter14_reg[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_Ex_V_ret_fu_885_p3 = ((cos_basis_reg_1299_pp0_iter13_reg[0:0] === 1'b1) ? 8'd0 : Ex_V_reg_1269_pp0_iter13_reg);

assign p_Result_20_fu_334_p3 = {{1'd1}, {loc_V_1_reg_1191_pp0_iter1_reg}};

assign p_Result_21_fu_411_p3 = {{p_Result_i3_i_fu_401_p4}, {1'd1}};

integer ap_tvar_int_0;

always @ (p_Result_21_fu_411_p3) begin
    for (ap_tvar_int_0 = 30 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 29 - 0) begin
            p_Result_22_fu_419_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_22_fu_419_p4[ap_tvar_int_0] = p_Result_21_fu_411_p3[29 - ap_tvar_int_0];
        end
    end
end

assign p_Result_23_fu_429_p3 = {{2'd3}, {p_Result_22_fu_419_p4}};

assign p_Result_24_fu_624_p3 = {{sin_basis_fu_618_p2}, {p_Result_i_fu_589_p4}};

assign p_Result_25_fu_921_p5 = {{tmp_15_i1_fu_914_p3}, {ap_const_lv32_0[17:0]}};

integer ap_tvar_int_1;

always @ (p_Val2_19_fu_902_p5) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_26_fu_933_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_26_fu_933_p4[ap_tvar_int_1] = p_Val2_19_fu_902_p5[31 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Result_25_fu_921_p5) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_27_fu_951_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_27_fu_951_p4[ap_tvar_int_2] = p_Result_25_fu_921_p5[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_28_fu_639_p3 = {{p_Result_19_reg_1178_pp0_iter8_reg}, {p_Val2_24_reg_1245_pp0_iter8_reg}};

assign p_Result_29_fu_1144_p4 = {{{p_Result_s_45_reg_1336_pp0_iter14_reg}, {ret_V_3_fu_1099_p3}}, {ret_V_4_fu_1136_p3}};

assign p_Result_i3_i_fu_401_p4 = {{p_Val2_8_fu_394_p3[57:29]}};

assign p_Result_i_fu_589_p4 = {{ssdm_int_V_write_ass_fu_548_p3[28:22]}};

assign p_Result_s_43_fu_743_p2 = (tmp_8_fu_738_p2 & tmp_4_fu_721_p3);

assign p_Result_s_44_fu_1091_p3 = ((tmp_9_fu_1086_p2[0:0] === 1'b1) ? out_exp_V_fu_1079_p3 : tmp_22_fu_1043_p1);

assign p_Result_s_45_fu_749_p3 = ((or_cond_42_fu_729_p2[0:0] === 1'b1) ? p_Result_s_fu_733_p2 : p_Result_s_43_fu_743_p2);

assign p_Result_s_fu_733_p2 = (p_Result_19_reg_1178_pp0_iter8_reg & not_do_cos_i_fu_613_p2);

assign p_Val2_11_fu_464_p2 = p_Val2_8_reg_1251 << tmp_15_i_fu_461_p1;

assign p_Val2_12_fu_599_p1 = ssdm_int_V_write_ass_fu_548_p3[21:0];

assign p_Val2_13_fu_1157_p0 = OP1_V_3_fu_757_p1;

assign p_Val2_13_fu_1157_p1 = OP1_V_3_fu_757_p1;

assign p_Val2_16_fu_828_p2 = ($signed(tmp_38_i_fu_822_p1) + $signed(tmp_39_i_fu_825_p1));

assign p_Val2_17_fu_849_p0 = r_V_reg_1376;

assign p_Val2_17_fu_849_p1 = p_Val2_17_fu_849_p10;

assign p_Val2_17_fu_849_p10 = Mx_V_read_assign_reg_1371;

assign p_Val2_17_fu_849_p2 = ($signed(p_Val2_17_fu_849_p0) * $signed({{1'b0}, {p_Val2_17_fu_849_p1}}));

assign p_Val2_19_fu_902_p5 = {{tmp_i1_41_fu_895_p3}, {ap_const_lv32_0[14:0]}};

assign p_Val2_1_fu_785_p0 = second_order_float_6_reg_1351;

assign p_Val2_1_fu_785_p1 = p_Val2_1_fu_785_p10;

assign p_Val2_1_fu_785_p10 = p_Val2_12_reg_1305_pp0_iter10_reg;

assign p_Val2_1_fu_785_p2 = ($signed(p_Val2_1_fu_785_p0) * $signed({{1'b0}, {p_Val2_1_fu_785_p1}}));

assign p_Val2_24_fu_379_p3 = ((closepath_reg_1197_pp0_iter6_reg[0:0] === 1'b1) ? 3'd0 : tmp_14_i_reg_1240);

assign p_Val2_5_fu_1164_p1 = p_Val2_5_fu_1164_p10;

assign p_Val2_5_fu_1164_p10 = tmp_35_i_reg_1341;

assign p_Val2_8_fu_394_p3 = ((tmp_16_fu_385_p1[0:0] === 1'b1) ? p_Val2_i_fu_389_p2 : p_Val2_6_reg_1234);

assign p_Val2_i_fu_389_p2 = (58'd0 - p_Val2_6_reg_1234);

assign p_Val2_s_fu_250_p1 = t_in;

assign p_cast_cast_fu_1072_p3 = ((do_cos_read_reg_1171_pp0_iter14_reg[0:0] === 1'b1) ? 8'd127 : 8'd0);

assign p_i_fu_449_p2 = ($signed(8'd131) + $signed(loc_V_reg_1184_pp0_iter7_reg));

assign r_V_3_fu_318_p2 = ref_4oPi_table_100_V_q0 << tmp_1_i_i_fu_315_p1;

assign r_V_fu_837_p2 = ($signed(p_Val2_16_fu_828_p2) + $signed(tmp_41_i_cast_fu_834_p1));

assign ref_4oPi_table_100_V_address0 = tmp_i2_i_fu_306_p1;

assign ret_V_3_fu_1099_p3 = ((or_cond_42_reg_1330_pp0_iter14_reg[0:0] === 1'b1) ? p_cast_cast_fu_1072_p3 : p_Result_s_44_fu_1091_p3);

assign ret_V_4_fu_1136_p3 = ((or_cond_fu_1124_p2[0:0] === 1'b1) ? newSel_cast_fu_1116_p3 : newSel1_fu_1128_p3);

assign rhs_V_fu_891_p1 = $signed(p_Ex_V_ret_fu_885_p3);

assign second_order_float_2_address0 = tmp_36_i_fu_632_p1;

assign second_order_float_3_address0 = tmp_36_i_fu_632_p1;

assign second_order_float_s_address0 = tmp_36_i_fu_632_p1;

assign sh_assign_1_cast5_fu_524_p1 = sh_assign_reg_1279;

assign sh_assign_1_cast_fu_527_p1 = sh_assign_reg_1279;

assign sh_assign_fu_506_p3 = ((isNeg_fu_492_p3[0:0] === 1'b1) ? tmp_20_i_fu_500_p2 : sh_cast_fu_488_p1);

assign sh_cast_fu_488_p1 = Ex_V_fu_482_p2;

assign shift_1_i_fu_990_p3 = ((tmp_33_i_fu_978_p2[0:0] === 1'b1) ? shift_2_1_i_fu_984_p2 : tmp_i_i1_fu_943_p3);

assign shift_2_1_i_fu_984_p2 = (32'd16 + tmp_i14_i_fu_961_p3);

assign sin_basis_fu_618_p2 = (tmp_fu_555_p10 ^ not_do_cos_i_fu_613_p2);

assign ssdm_int_V_write_ass_fu_548_p3 = ((isNeg_reg_1274[0:0] === 1'b1) ? tmp_22_i_cast_fu_538_p1 : tmp_23_i_fu_542_p2);

assign storemerge_i_fu_454_p3 = ((closepath_reg_1197_pp0_iter7_reg[0:0] === 1'b1) ? p_i_fu_449_p2 : 8'd0);

assign tmp_10_fu_1046_p4 = {{tmp_32_1_i_fu_1034_p2[27:5]}};

assign tmp_11_fu_1056_p4 = {{tmp_32_i_reg_1402[27:5]}};

assign tmp_12_fu_1065_p3 = ((tmp_33_i_reg_1408[0:0] === 1'b1) ? tmp_10_fu_1046_p4 : tmp_11_fu_1056_p4);

assign tmp_12_i_fu_1022_p2 = ((result_V_reg_1381 == 29'd0) ? 1'b1 : 1'b0);

assign tmp_15_fu_311_p1 = addr_V_fu_288_p3[3:0];

assign tmp_15_i1_fu_914_p3 = {{p_Result_i1_reg_1392}, {1'd1}};

assign tmp_15_i_fu_461_p1 = Mx_zeros_V_reg_1256;

assign tmp_16_fu_385_p1 = p_Val2_24_fu_379_p3[0:0];

assign tmp_18_i_fu_479_p1 = Mx_zeros_V_reg_1256;

assign tmp_1_fu_296_p4 = {{addr_V_fu_288_p3[7:4]}};

assign tmp_1_i_i_fu_315_p1 = tmp_15_reg_1208;

assign tmp_20_fu_1027_p1 = tmp_32_i_reg_1402[28:0];

assign tmp_20_i_fu_500_p2 = ($signed(9'd0) - $signed(sh_cast_fu_488_p1));

assign tmp_21_i_fu_530_p1 = Mx_V_reg_1262;

assign tmp_22_fu_1043_p1 = newexp_reg_1413[7:0];

assign tmp_22_i_cast_fu_538_p1 = tmp_22_i_fu_533_p2;

assign tmp_22_i_fu_533_p2 = Mx_V_reg_1262 >> sh_assign_1_cast_fu_527_p1;

assign tmp_23_i_fu_542_p2 = tmp_21_i_fu_530_p1 << sh_assign_1_cast5_fu_524_p1;

assign tmp_29_1_i_fu_1030_p1 = tmp_20_fu_1027_p1;

assign tmp_29_i1_fu_969_p1 = result_V_reg_1381;

assign tmp_32_1_i_fu_1034_p2 = tmp_29_1_i_fu_1030_p1 << tmp_i14_i_reg_1397;

assign tmp_32_i_fu_972_p2 = tmp_29_i1_fu_969_p1 << tmp_i_i1_fu_943_p3;

assign tmp_33_i_fu_978_p2 = ((tmp_i_i1_fu_943_p3 == 32'd16) ? 1'b1 : 1'b0);

assign tmp_36_i_fu_632_p1 = p_Result_24_fu_624_p3;

assign tmp_38_i_fu_822_p1 = $signed(p_Val2_15_reg_1346_pp0_iter11_reg);

assign tmp_39_i_fu_825_p1 = $signed(tmp_28_i_reg_1361);

assign tmp_41_i_cast_fu_834_p1 = $signed(tmp_30_i_reg_1366);

assign tmp_4_fu_721_p3 = ((cos_basis_fu_582_p3[0:0] === 1'b1) ? tmp_2_fu_645_p18 : tmp_3_fu_683_p18);

assign tmp_5_fu_514_p2 = ((loc_V_reg_1184_pp0_iter7_reg == 8'd0) ? 1'b1 : 1'b0);

assign tmp_6_fu_354_p2 = ((loc_V_1_reg_1191_pp0_iter1_reg == 23'd0) ? 1'b1 : 1'b0);

assign tmp_7_fu_519_p2 = ((loc_V_reg_1184_pp0_iter7_reg == 8'd255) ? 1'b1 : 1'b0);

assign tmp_8_fu_738_p2 = (tmp_7_reg_1291 ^ 1'd1);

assign tmp_9_fu_1086_p2 = (tmp_7_reg_1291_pp0_iter14_reg | or_cond_i_fu_1039_p2);


always @ (p_Result_27_fu_951_p4) begin
    if (p_Result_27_fu_951_p4[0] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd0;
    end else if (p_Result_27_fu_951_p4[1] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd1;
    end else if (p_Result_27_fu_951_p4[2] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd2;
    end else if (p_Result_27_fu_951_p4[3] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd3;
    end else if (p_Result_27_fu_951_p4[4] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd4;
    end else if (p_Result_27_fu_951_p4[5] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd5;
    end else if (p_Result_27_fu_951_p4[6] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd6;
    end else if (p_Result_27_fu_951_p4[7] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd7;
    end else if (p_Result_27_fu_951_p4[8] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd8;
    end else if (p_Result_27_fu_951_p4[9] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd9;
    end else if (p_Result_27_fu_951_p4[10] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd10;
    end else if (p_Result_27_fu_951_p4[11] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd11;
    end else if (p_Result_27_fu_951_p4[12] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd12;
    end else if (p_Result_27_fu_951_p4[13] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd13;
    end else if (p_Result_27_fu_951_p4[14] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd14;
    end else if (p_Result_27_fu_951_p4[15] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd15;
    end else if (p_Result_27_fu_951_p4[16] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd16;
    end else if (p_Result_27_fu_951_p4[17] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd17;
    end else if (p_Result_27_fu_951_p4[18] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd18;
    end else if (p_Result_27_fu_951_p4[19] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd19;
    end else if (p_Result_27_fu_951_p4[20] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd20;
    end else if (p_Result_27_fu_951_p4[21] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd21;
    end else if (p_Result_27_fu_951_p4[22] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd22;
    end else if (p_Result_27_fu_951_p4[23] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd23;
    end else if (p_Result_27_fu_951_p4[24] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd24;
    end else if (p_Result_27_fu_951_p4[25] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd25;
    end else if (p_Result_27_fu_951_p4[26] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd26;
    end else if (p_Result_27_fu_951_p4[27] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd27;
    end else if (p_Result_27_fu_951_p4[28] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd28;
    end else if (p_Result_27_fu_951_p4[29] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd29;
    end else if (p_Result_27_fu_951_p4[30] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd30;
    end else if (p_Result_27_fu_951_p4[31] == 1'b1) begin
        tmp_i14_i_fu_961_p3 = 32'd31;
    end else begin
        tmp_i14_i_fu_961_p3 = 32'd32;
    end
end

assign tmp_i1_41_fu_895_p3 = {{p_Result_20_i_reg_1387}, {1'd1}};

assign tmp_i2_cast_fu_1004_p1 = $signed(tmp_i2_fu_998_p2);

assign tmp_i2_fu_998_p2 = ($signed(9'd127) + $signed(rhs_V_fu_891_p1));

assign tmp_i2_i_fu_306_p1 = tmp_1_fu_296_p4;


always @ (p_Result_26_fu_933_p4) begin
    if (p_Result_26_fu_933_p4[0] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd0;
    end else if (p_Result_26_fu_933_p4[1] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd1;
    end else if (p_Result_26_fu_933_p4[2] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd2;
    end else if (p_Result_26_fu_933_p4[3] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd3;
    end else if (p_Result_26_fu_933_p4[4] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd4;
    end else if (p_Result_26_fu_933_p4[5] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd5;
    end else if (p_Result_26_fu_933_p4[6] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd6;
    end else if (p_Result_26_fu_933_p4[7] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd7;
    end else if (p_Result_26_fu_933_p4[8] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd8;
    end else if (p_Result_26_fu_933_p4[9] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd9;
    end else if (p_Result_26_fu_933_p4[10] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd10;
    end else if (p_Result_26_fu_933_p4[11] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd11;
    end else if (p_Result_26_fu_933_p4[12] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd12;
    end else if (p_Result_26_fu_933_p4[13] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd13;
    end else if (p_Result_26_fu_933_p4[14] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd14;
    end else if (p_Result_26_fu_933_p4[15] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd15;
    end else if (p_Result_26_fu_933_p4[16] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd16;
    end else if (p_Result_26_fu_933_p4[17] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd17;
    end else if (p_Result_26_fu_933_p4[18] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd18;
    end else if (p_Result_26_fu_933_p4[19] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd19;
    end else if (p_Result_26_fu_933_p4[20] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd20;
    end else if (p_Result_26_fu_933_p4[21] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd21;
    end else if (p_Result_26_fu_933_p4[22] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd22;
    end else if (p_Result_26_fu_933_p4[23] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd23;
    end else if (p_Result_26_fu_933_p4[24] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd24;
    end else if (p_Result_26_fu_933_p4[25] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd25;
    end else if (p_Result_26_fu_933_p4[26] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd26;
    end else if (p_Result_26_fu_933_p4[27] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd27;
    end else if (p_Result_26_fu_933_p4[28] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd28;
    end else if (p_Result_26_fu_933_p4[29] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd29;
    end else if (p_Result_26_fu_933_p4[30] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd30;
    end else if (p_Result_26_fu_933_p4[31] == 1'b1) begin
        tmp_i_i1_fu_943_p3 = 32'd31;
    end else begin
        tmp_i_i1_fu_943_p3 = 32'd32;
    end
end

assign tmp_s_fu_576_p2 = (tmp_fu_555_p10 ^ 1'd1);


always @ (p_Result_23_fu_429_p3) begin
    if (p_Result_23_fu_429_p3[0] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd0;
    end else if (p_Result_23_fu_429_p3[1] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd1;
    end else if (p_Result_23_fu_429_p3[2] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd2;
    end else if (p_Result_23_fu_429_p3[3] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd3;
    end else if (p_Result_23_fu_429_p3[4] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd4;
    end else if (p_Result_23_fu_429_p3[5] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd5;
    end else if (p_Result_23_fu_429_p3[6] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd6;
    end else if (p_Result_23_fu_429_p3[7] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd7;
    end else if (p_Result_23_fu_429_p3[8] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd8;
    end else if (p_Result_23_fu_429_p3[9] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd9;
    end else if (p_Result_23_fu_429_p3[10] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd10;
    end else if (p_Result_23_fu_429_p3[11] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd11;
    end else if (p_Result_23_fu_429_p3[12] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd12;
    end else if (p_Result_23_fu_429_p3[13] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd13;
    end else if (p_Result_23_fu_429_p3[14] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd14;
    end else if (p_Result_23_fu_429_p3[15] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd15;
    end else if (p_Result_23_fu_429_p3[16] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd16;
    end else if (p_Result_23_fu_429_p3[17] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd17;
    end else if (p_Result_23_fu_429_p3[18] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd18;
    end else if (p_Result_23_fu_429_p3[19] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd19;
    end else if (p_Result_23_fu_429_p3[20] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd20;
    end else if (p_Result_23_fu_429_p3[21] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd21;
    end else if (p_Result_23_fu_429_p3[22] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd22;
    end else if (p_Result_23_fu_429_p3[23] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd23;
    end else if (p_Result_23_fu_429_p3[24] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd24;
    end else if (p_Result_23_fu_429_p3[25] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd25;
    end else if (p_Result_23_fu_429_p3[26] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd26;
    end else if (p_Result_23_fu_429_p3[27] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd27;
    end else if (p_Result_23_fu_429_p3[28] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd28;
    end else if (p_Result_23_fu_429_p3[29] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd29;
    end else if (p_Result_23_fu_429_p3[30] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd30;
    end else if (p_Result_23_fu_429_p3[31] == 1'b1) begin
        val_assign_fu_437_p3 = 32'd31;
    end else begin
        val_assign_fu_437_p3 = 32'd32;
    end
end

endmodule //sin_or_cos_float_s
