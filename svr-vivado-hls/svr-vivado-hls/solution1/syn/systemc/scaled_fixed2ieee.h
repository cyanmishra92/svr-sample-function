// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _scaled_fixed2ieee_HH_
#define _scaled_fixed2ieee_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "convert_mux_42_32bkb.h"

namespace ap_rtl {

struct scaled_fixed2ieee : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<63> > in_V;
    sc_in< sc_lv<12> > prescale;
    sc_out< sc_lv<64> > ap_return;


    // Module declarations
    scaled_fixed2ieee(sc_module_name name);
    SC_HAS_PROCESS(scaled_fixed2ieee);

    ~scaled_fixed2ieee();

    sc_trace_file* mVcdFile;

    convert_mux_42_32bkb<1,1,32,32,32,32,2,32>* convert_mux_42_32bkb_U1;
    convert_mux_42_32bkb<1,1,32,32,32,32,2,32>* convert_mux_42_32bkb_U2;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > out_bits_2_V_load_reg_675;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > out_bits_2_V_1_load_reg_681;
    sc_signal< sc_lv<32> > out_bits_2_V_2_load_reg_687;
    sc_signal< sc_lv<2> > i_2_fu_240_p2;
    sc_signal< sc_lv<2> > i_2_reg_696;
    sc_signal< sc_lv<6> > Hi_assign_fu_254_p2;
    sc_signal< sc_lv<6> > Hi_assign_reg_701;
    sc_signal< sc_lv<1> > exitcond1_fu_234_p2;
    sc_signal< sc_lv<6> > Lo_assign_fu_260_p2;
    sc_signal< sc_lv<6> > Lo_assign_reg_707;
    sc_signal< sc_lv<1> > tmp_21_fu_266_p2;
    sc_signal< sc_lv<1> > tmp_21_reg_714;
    sc_signal< sc_lv<6> > tmp_24_fu_272_p2;
    sc_signal< sc_lv<6> > tmp_24_reg_721;
    sc_signal< sc_lv<32> > p_Result_28_fu_289_p5;
    sc_signal< sc_lv<32> > p_Result_28_reg_750;
    sc_signal< sc_lv<16> > tmp_36_fu_368_p1;
    sc_signal< sc_lv<16> > tmp_36_reg_755;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > i_1_fu_412_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_37_fu_470_p3;
    sc_signal< sc_lv<1> > tmp_37_reg_771;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > i_3_fu_478_p2;
    sc_signal< sc_lv<3> > i_3_reg_775;
    sc_signal< sc_lv<32> > sh_assign_fu_500_p6;
    sc_signal< sc_lv<32> > sh_assign_reg_780;
    sc_signal< sc_lv<1> > isNeg_reg_787;
    sc_signal< sc_lv<32> > tmp_9_fu_522_p2;
    sc_signal< sc_lv<32> > tmp_9_reg_793;
    sc_signal< sc_lv<32> > shift_2_fu_528_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<63> > in_shift_V_fu_554_p3;
    sc_signal< sc_lv<1> > tmp_10_fu_566_p2;
    sc_signal< sc_lv<1> > tmp_10_reg_813;
    sc_signal< sc_lv<1> > tmp_5_fu_561_p2;
    sc_signal< sc_lv<2> > i_reg_138;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > p_Val2_2_reg_150;
    sc_signal< sc_lv<3> > i1_reg_161;
    sc_signal< sc_lv<1> > exitcond_fu_406_p2;
    sc_signal< sc_lv<63> > in_shift_reg_172;
    sc_signal< sc_lv<32> > shift_reg_182;
    sc_signal< sc_lv<3> > i2_reg_194;
    sc_signal< sc_lv<63> > p_Val2_s_reg_205;
    sc_signal< sc_lv<32> > shift_1_reg_215;
    sc_signal< sc_lv<32> > out_bits_2_V_fu_98;
    sc_signal< sc_lv<32> > out_bits_0_V_fu_379_p5;
    sc_signal< sc_lv<32> > out_bits_2_V_1_fu_102;
    sc_signal< sc_lv<32> > out_bits_2_V_2_fu_106;
    sc_signal< sc_lv<32> > c_3_fu_110;
    sc_signal< sc_lv<32> > c_0_fu_442_p3;
    sc_signal< sc_lv<2> > tmp_35_fu_418_p1;
    sc_signal< sc_lv<32> > c_3_1_fu_114;
    sc_signal< sc_lv<32> > c_3_2_fu_118;
    sc_signal< sc_lv<32> > c_3_3_fu_122;
    sc_signal< sc_lv<6> > tmp_s_fu_246_p3;
    sc_signal< sc_lv<15> > tmp_20_fu_278_p1;
    sc_signal< sc_lv<16> > tmp_fu_281_p3;
    sc_signal< sc_lv<6> > tmp_23_fu_310_p2;
    sc_signal< sc_lv<6> > tmp_25_fu_314_p2;
    sc_signal< sc_lv<63> > tmp_22_fu_301_p4;
    sc_signal< sc_lv<6> > tmp_26_fu_318_p3;
    sc_signal< sc_lv<6> > tmp_28_fu_331_p3;
    sc_signal< sc_lv<6> > tmp_29_fu_336_p2;
    sc_signal< sc_lv<63> > tmp_27_fu_325_p3;
    sc_signal< sc_lv<63> > tmp_30_fu_342_p1;
    sc_signal< sc_lv<63> > tmp_31_fu_346_p1;
    sc_signal< sc_lv<63> > tmp_32_fu_350_p2;
    sc_signal< sc_lv<63> > tmp_33_fu_356_p2;
    sc_signal< sc_lv<63> > p_Result_s_fu_362_p2;
    sc_signal< sc_lv<17> > tmp_2_fu_372_p3;
    sc_signal< sc_lv<2> > p_Val2_30_fu_422_p5;
    sc_signal< sc_lv<32> > p_Val2_30_fu_422_p6;
    sc_signal< sc_lv<32> > p_Result_29_fu_432_p4;
    sc_signal< sc_lv<2> > sh_assign_fu_500_p5;
    sc_signal< sc_lv<32> > sh_assign_1_fu_533_p3;
    sc_signal< sc_lv<63> > tmp_1_fu_538_p1;
    sc_signal< sc_lv<63> > tmp_4_fu_548_p2;
    sc_signal< sc_lv<63> > tmp_3_fu_542_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<12> > tmp_6_fu_571_p2;
    sc_signal< sc_lv<32> > tmp_6_cast_fu_576_p1;
    sc_signal< sc_lv<32> > newexp_fu_580_p2;
    sc_signal< sc_lv<1> > tmp_40_fu_586_p3;
    sc_signal< sc_lv<1> > or_cond_fu_594_p2;
    sc_signal< sc_lv<52> > phitmp2_fu_603_p4;
    sc_signal< sc_lv<11> > tmp_41_fu_599_p1;
    sc_signal< sc_lv<11> > out_exp_V_fu_621_p3;
    sc_signal< sc_lv<52> > p_Val2_31_fu_613_p3;
    sc_signal< sc_lv<64> > p_Result_30_fu_629_p4;
    sc_signal< sc_lv<64> > result_write_assign_fu_639_p1;
    sc_signal< sc_lv<64> > ap_return_preg;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_3E;
    static const sc_lv<6> ap_const_lv6_2F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<63> ap_const_lv63_7FFFFFFFFFFFFFFF;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<63> ap_const_lv63_0;
    static const sc_lv<12> ap_const_lv12_3FF;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_3D;
    static const sc_lv<52> ap_const_lv52_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Hi_assign_fu_254_p2();
    void thread_Lo_assign_fu_260_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_c_0_fu_442_p3();
    void thread_exitcond1_fu_234_p2();
    void thread_exitcond_fu_406_p2();
    void thread_i_1_fu_412_p2();
    void thread_i_2_fu_240_p2();
    void thread_i_3_fu_478_p2();
    void thread_in_shift_V_fu_554_p3();
    void thread_newexp_fu_580_p2();
    void thread_or_cond_fu_594_p2();
    void thread_out_bits_0_V_fu_379_p5();
    void thread_out_exp_V_fu_621_p3();
    void thread_p_Result_28_fu_289_p5();
    void thread_p_Result_29_fu_432_p4();
    void thread_p_Result_30_fu_629_p4();
    void thread_p_Result_s_fu_362_p2();
    void thread_p_Val2_30_fu_422_p5();
    void thread_p_Val2_31_fu_613_p3();
    void thread_phitmp2_fu_603_p4();
    void thread_result_write_assign_fu_639_p1();
    void thread_sh_assign_1_fu_533_p3();
    void thread_sh_assign_fu_500_p5();
    void thread_shift_2_fu_528_p2();
    void thread_tmp_10_fu_566_p2();
    void thread_tmp_1_fu_538_p1();
    void thread_tmp_20_fu_278_p1();
    void thread_tmp_21_fu_266_p2();
    void thread_tmp_22_fu_301_p4();
    void thread_tmp_23_fu_310_p2();
    void thread_tmp_24_fu_272_p2();
    void thread_tmp_25_fu_314_p2();
    void thread_tmp_26_fu_318_p3();
    void thread_tmp_27_fu_325_p3();
    void thread_tmp_28_fu_331_p3();
    void thread_tmp_29_fu_336_p2();
    void thread_tmp_2_fu_372_p3();
    void thread_tmp_30_fu_342_p1();
    void thread_tmp_31_fu_346_p1();
    void thread_tmp_32_fu_350_p2();
    void thread_tmp_33_fu_356_p2();
    void thread_tmp_35_fu_418_p1();
    void thread_tmp_36_fu_368_p1();
    void thread_tmp_37_fu_470_p3();
    void thread_tmp_3_fu_542_p2();
    void thread_tmp_40_fu_586_p3();
    void thread_tmp_41_fu_599_p1();
    void thread_tmp_4_fu_548_p2();
    void thread_tmp_5_fu_561_p2();
    void thread_tmp_6_cast_fu_576_p1();
    void thread_tmp_6_fu_571_p2();
    void thread_tmp_9_fu_522_p2();
    void thread_tmp_fu_281_p3();
    void thread_tmp_s_fu_246_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
